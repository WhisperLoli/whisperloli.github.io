<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-02-19T20:32:19+08:00</updated><id>http://localhost:4000/</id><title type="html">Loli</title><subtitle>For dream</subtitle><author><name>true</name></author><entry><title type="html">AWS搭建VPN</title><link href="http://localhost:4000/2019/02/16/AWS_VPN.html" rel="alternate" type="text/html" title="AWS搭建VPN" /><published>2019-02-16T23:37:24+08:00</published><updated>2019-02-16T23:37:24+08:00</updated><id>http://localhost:4000/2019/02/16/AWS_VPN</id><content type="html" xml:base="http://localhost:4000/2019/02/16/AWS_VPN.html">&lt;p&gt;之前一直用的是搬瓦工的VPS，现在搬瓦工只支持KVM模式，所以价格上去了，我的搬瓦工也到期了，听说AWS首年免费使用，所以尝试一下，注册了一个账号，英文不好的童鞋可以把语言切换成中文。&lt;/p&gt;

&lt;p&gt;首先要注册一个账号，注册的时候要求填电话号码，不要乱填，因为需要验证手机号码的，还需要绑定一张信用卡，信用要支持Visa的，要全币种的信用卡。AWS会进行信用卡验证，扣1$验证信用卡是否有效，说是会退的，后面我还被扣了1$的押金，招行微信公众号发消息告诉我消费了，后来我又打电话给招行客服，客服说我信用卡账单没查到这两笔交易，以账单为准，哈哈&lt;/p&gt;

&lt;p&gt;先选择机器所在地区，我选择的是东京，截图右上角
&lt;img src=&quot;/blog/blog_aws_vpn/area.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;创建EC2实例,点击图中的launch instance创建实例
&lt;img src=&quot;/blog/blog_aws_vpn/launch.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择带Free tier eligible的机器，这里选的是Ubuntu Server 18.04 LTS这款
&lt;img src=&quot;/blog/blog_aws_vpn/free_machine.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;进来之后还是选择带Free tier eligible的机器，配置不高，但是搭建VPN还是可以的
&lt;img src=&quot;/blog/blog_aws_vpn/review_launch.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在之后的页面中点击Launch按钮，会弹出这个框，需要设置密钥对，设置完后下载密钥对，之后再Launch Instances，密钥对在后面会用于登陆服务器，
&lt;img src=&quot;/blog/blog_aws_vpn/key_pair.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;先启动实例后再连接实例
&lt;img src=&quot;/blog/blog_aws_vpn/connect.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;会弹出连接方式，教你怎么连接上你创建的实例，先给下载的密钥对文件授权，然后用ssh方式登录服务器
&lt;img src=&quot;/blog/blog_aws_vpn/ssh_connect.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此，实例创建完成&lt;/p&gt;

&lt;p&gt;登录服务器，用Shadowsocks搭建VPN&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; //获取root权限
apt-get update //更新apt-get
apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python-pip //安装pip工具，用于安装shadowsocks
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;shadowsocks //安装shadowsocks
vim ~/shadowsocks_conf.json //编辑shadowsocks配置

&lt;span class=&quot;c&quot;&gt;#json文件内容为如下&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;server&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;0.0.0.0&quot;&lt;/span&gt;, 
    &lt;span class=&quot;s2&quot;&gt;&quot;server_port&quot;&lt;/span&gt;: 443, &lt;span class=&quot;c&quot;&gt;#vpn端口号&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;qwertyuiop&quot;&lt;/span&gt;, &lt;span class=&quot;c&quot;&gt;#连接密码&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;local_address&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;local_port&quot;&lt;/span&gt;:1080,
    &lt;span class=&quot;s2&quot;&gt;&quot;timeout&quot;&lt;/span&gt;:600,
    &lt;span class=&quot;s2&quot;&gt;&quot;method&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;aes-256-cfb&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;fast_open&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


ssserver &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; ~/shadowsocks_conf.json &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; start //启动shadowsocks

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;编辑EC2入站规则，还是再控制台页面，下面是有滚动条的，滑到最右边就能看见了
&lt;img src=&quot;/blog/blog_aws_vpn/security_groups.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_aws_vpn/edit.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;自定义入站规则，把刚刚在json配置文件中的端口给加上去，我用的是443，再加个22端口，ssh默认使用的是22端口，如果修改过，则换为修改后的端口
&lt;img src=&quot;/blog/blog_aws_vpn/custom_rule.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此搭建工作完成&lt;/p&gt;

&lt;p&gt;本人的是Mac版的，分享一个&lt;a href=&quot;链接:https://pan.baidu.com/s/1Ut0M8bMxCPnr1xoOHOxZig&quot;&gt;百度云链接&lt;/a&gt;，密码:2v7x，两个版本的客户端，任意下载一个即可，使用&lt;a href=&quot;https://github.com/shadowsocks/ShadowsocksX-NG/releases&quot;&gt;GitHub下载地址&lt;/a&gt;下载也可以&lt;/p&gt;

&lt;p&gt;安装完后，在 服务器-&amp;gt;服务器设定，填写配置信息，配置信息在刚刚的json文件中配置了，地址不要使用ifconfig显示的IP，在控制台页面中查看公网IP，还是在下方把滚动条向右滑
&lt;img src=&quot;/blog/blog_aws_vpn/ss_connect.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_aws_vpn/public_ip.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;大功告成，不要干坏事噢&lt;/p&gt;

&lt;p&gt;为了方便以后登录服务器，建议把ssh public key添加到服务器上&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 本地操作&lt;/span&gt;
ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa &lt;span class=&quot;c&quot;&gt;#生成ssh key，使用rsa加密方式，输入密码时可以回车，不设置密码&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.ssh
&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;id_rsa.pub &lt;span class=&quot;c&quot;&gt;#该文件中的内容就是ssh public key，把该文件中的内容拷贝&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#服务器端操作&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.ssh
&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;authorized_keys &lt;span class=&quot;c&quot;&gt;#如果没有authorized_keys文件&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#再把刚copy的public key添加到authorized_keys文件中，之后就可以使用ssh user@ip 的方式连接上服务器&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>true</name></author><category term="VPS" /><category term="Linux" /><category term="VPN" /><summary type="html">之前一直用的是搬瓦工的VPS，现在搬瓦工只支持KVM模式，所以价格上去了，我的搬瓦工也到期了，听说AWS首年免费使用，所以尝试一下，注册了一个账号，英文不好的童鞋可以把语言切换成中文。</summary></entry><entry><title type="html">引入sbt错误</title><link href="http://localhost:4000/2019/02/02/sbt_error-conclusion.html" rel="alternate" type="text/html" title="引入sbt错误" /><published>2019-02-02T22:59:37+08:00</published><updated>2019-02-02T22:59:37+08:00</updated><id>http://localhost:4000/2019/02/02/sbt_error-conclusion</id><content type="html" xml:base="http://localhost:4000/2019/02/02/sbt_error-conclusion.html">&lt;p&gt;今天使用IntelliJ IDEA创建项目，碰到个古怪的错误，创建完报错，无法引入sbt，错误信息如下
&lt;img src=&quot;/blog/blog_sbt_import_error_conclusion/import_error.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;根据错误信息，大胆猜测本地可能没有sbt1.2.8，于是进入sbt本地仓库中查看
&lt;img src=&quot;/blog/blog_sbt_import_error_conclusion/sbt_local_version.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;果然，本地仓库中sbt版本没有1.2.8，于是切换项目的sbt版本，切换sbt版本需要修改build.properties中sbt的版本号，切换操作如下图显示
&lt;img src=&quot;/blog/blog_sbt_import_error_conclusion/sbt_version.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;PS：明天回家，准备过年。&lt;br /&gt;
         从去年十一月份出来实习到现在，已经工作一年多了，学到了很多，技术上得到了很大的成长，虽然有时很累，但是更多的还是开心，语言也从python到scala，再到python，仍然记得当初秋招和实习找工作时我想做的是Java开发。工作中慢慢的接触到大数据领域，再慢慢接触到算法领域，也学了一段时间的算法，常见分类、聚类算法，scikit-learn等，个人更感兴趣的还是大数据领域。&lt;br /&gt;
         今年，告别校园生涯，走上社会，遗憾的是说好的毕业旅行泡汤了。&lt;br /&gt;
         毕业后没多久，公司也发生了很多变动，leader的离职对我的打击还是挺大的吧，从没想过他会离职，真的非常优秀的leader，还会给我们指导学习方向，教会了我很多东西。还记得之前他出差，还和我语音通话一起调bug到凌晨，真的非常感谢。在leader离职后的日子里，虽然技术上没什么大的成长，但是在社会阅历上也有很多成长，因为缺少了前leader这棵大树，可以看到公司的很多实际情况，或许，也是在这个时候才真正的了解公司了。才开始知道其实很多事情并没有表面看上去那么光鲜亮丽吧！也见识了各种各样的甩锅技术，可悲的是很多人怕背锅连最基本的担当都丢失了，出了事情把所有的责任往外推的一干二净。有过希望，也有过失落。这一年就这么过去了，真的好快，感觉自己还有很多东西没学，还有很多东西不懂。来年，一定变得更优秀！&lt;br /&gt;
         这一年里，最最最重要的是收获了真挚的友谊（小肥汪&amp;amp;刺猬妈），这是最开心的事情了。偶尔一起聚个餐，周末一起出去玩，让孤孤单单的我也感受到了温暖。谢谢你们！愿友谊地久天长！ &lt;br /&gt;
         2018，再见！&lt;br /&gt;
         2019，加油！&lt;/p&gt;</content><author><name>true</name></author><category term="Sbt" /><summary type="html">今天使用IntelliJ IDEA创建项目，碰到个古怪的错误，创建完报错，无法引入sbt，错误信息如下</summary></entry><entry><title type="html">jvisualvm监控远程服务器</title><link href="http://localhost:4000/2019/01/09/jvisualvm_jxm.html" rel="alternate" type="text/html" title="jvisualvm监控远程服务器" /><published>2019-01-09T03:24:56+08:00</published><updated>2019-01-09T03:24:56+08:00</updated><id>http://localhost:4000/2019/01/09/jvisualvm_jxm</id><content type="html" xml:base="http://localhost:4000/2019/01/09/jvisualvm_jxm.html">&lt;p&gt;添加JVM参数，在这里未使用身份验证，生产环境建议开启用户名密码验证，端口号为18999，可自行更改，同jstatd方式一样，远程访问需要开放指定的端口&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;-Djava&lt;/span&gt;.rmi.server.hostname&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ip&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;域名&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Dcom&lt;/span&gt;.sun.management.jmxremote.port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;18999 &lt;span class=&quot;nt&quot;&gt;-Dcom&lt;/span&gt;.sun.management.jmxremote.ssl&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Dcom&lt;/span&gt;.sun.management.jmxremote.authenticate&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_jvm/success.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注意：Scala程序做成systemd服务启动，添加JVM参数需要在参数前加-J，如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_jvm/scala_style.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;</content><author><name>true</name></author><category term="JVM" /><category term="Scala" /><summary type="html">添加JVM参数，在这里未使用身份验证，生产环境建议开启用户名密码验证，端口号为18999，可自行更改，同jstatd方式一样，远程访问需要开放指定的端口</summary></entry><entry><title type="html">jvisualvm监控远程服务器</title><link href="http://localhost:4000/2019/01/04/jvisualvm.html" rel="alternate" type="text/html" title="jvisualvm监控远程服务器" /><published>2019-01-04T05:05:21+08:00</published><updated>2019-01-04T05:05:21+08:00</updated><id>http://localhost:4000/2019/01/04/jvisualvm</id><content type="html" xml:base="http://localhost:4000/2019/01/04/jvisualvm.html">&lt;p&gt;步骤&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;ssh登录服务器&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh root@xxx.xxx.xxx.xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在家目录下创建授权文件&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~
vi jstatd.all.policy
&lt;span class=&quot;c&quot;&gt;#在文件中输入如下内容&lt;/span&gt;
grant codebase &lt;span class=&quot;s2&quot;&gt;&quot;file:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.home&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/../lib/tools.jar&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 permission java.security.AllPermission&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;启动jstatd服务，默认连接端口号为1099&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/bin/jstatd &lt;span class=&quot;nt&quot;&gt;-J-Djava&lt;/span&gt;.security.policy&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jstatd.all.policy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;本地连接不上远程解决方案&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;服务器上开启了防火墙，需要开放1099端口，或者关闭防火墙，需要注意的是，仅仅开放1099端口可能还是连接不上，因为jstatd服务有两个端口，另一个端口也需要开放
&lt;img src=&quot;/blog/blog_jvm/jstatd_port.jpg&quot; alt=&quot;image&quot; /&gt;
如图所示，还有另一个端口37529，经测试，该端口是随机的，每次开启jstatd服务，该端口都会变化，检查端口是否开放，在本地执行如下命令&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;telnet ip port &lt;span class=&quot;c&quot;&gt;#如果端口未开放，则连接会被拒绝或者卡在尝试连接中&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果端口均可以访问，执行如下命令启动服务&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/bin/jstatd &lt;span class=&quot;nt&quot;&gt;-J-Djava&lt;/span&gt;.security.policy&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jstatd.all.policy &lt;span class=&quot;nt&quot;&gt;-J-Djava&lt;/span&gt;.rmi.server.hostname&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;域名&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;IP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>true</name></author><category term="JVM" /><summary type="html">步骤</summary></entry><entry><title type="html">Elasticsearch自定义分词器</title><link href="http://localhost:4000/2018/12/23/Elasticsearch%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E8%AF%8D%E5%99%A8.html" rel="alternate" type="text/html" title="Elasticsearch自定义分词器" /><published>2018-12-23T13:11:01+08:00</published><updated>2018-12-23T13:11:01+08:00</updated><id>http://localhost:4000/2018/12/23/Elasticsearch%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E8%AF%8D%E5%99%A8</id><content type="html" xml:base="http://localhost:4000/2018/12/23/Elasticsearch%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E8%AF%8D%E5%99%A8.html">&lt;p&gt;Elasticsearch默认的分词器会将中文比如”你好”拆分成”你”和”好”这两个字，然后按照倒排索引进行存储，所以默认的分词不好用，大部分时候都会自己更换分词器以达到预期的效果。推荐一个很好用的分词器，众所周知的IK分词器&lt;/p&gt;

&lt;p&gt;简单介绍一下IK分词器中的ik_smart和ik_max_word，两者的区别就是分词粒度不一样&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ik_smart:粗粒度分词
ik_max_word:细粒度分词，切分出的词尽可能的多
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;ik_smart粗粒度分词效果
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/ik_smart.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ik_max_word细粒度分词效果，可以看到切分出的词非常多，ik_smart切分的词只是ik_max_word分词后的子集
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/ik_max_word.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;安装IK分词器，本人使用的Elasticsearch版本是5.5.3，安装IK需要把下面命令中的5.5.3更换成自己Elasticsearch的版本号，安装完后重启Elasticsearch&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.5.3/elasticsearch-analysis-ik-5.5.3.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;IK分词器详细说明&lt;a href=&quot;https://github.com/medcl/elasticsearch-analysis-ik&quot;&gt;参见github文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;既然中文可以搜索，那么拼音也可以进行搜索，用户时常在输入中文的时候输成了拼音，为了提高UE，也应当返回搜索结果，就像百度搜索一样
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/baidu.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;再介绍一下拼音分词插件，本人使用的是elasticsearch-analysis-pin插件，同IK分词插件一样，也是elastic大咖&lt;a href=&quot;https://github.com/medcl&quot;&gt;medcl&lt;/a&gt;的项目，详细使用详情参见&lt;a href=&quot;https://github.com/medcl/elasticsearch-analysis-pinyin&quot;&gt;github&lt;/a&gt;，大咖常年活跃在&lt;a href=&quot;https://elasticsearch.cn/&quot;&gt;elastic中文社区&lt;/a&gt;，很多问题在中文社区都能够得到有效的解决&lt;/p&gt;

&lt;p&gt;安装方式，同样也要更换成Elasticsearch相对应的版本号&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-pinyin/releases/download/v5.5.3/elasticsearch-analysis-pinyin-5.5.3.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;pinyin索引效果
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/pinyin.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;pinyin分词器存在一个问题就是多音字不好区分，NLP语义理解一直也是比较难的部分，例如下面就没有将“银行”的拼音正确解析
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/pinyin_ polyphone.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;忘记介绍了，本人使用的搜索界面是kibana，是ELK组件中的K，E是Elaisticsearch，L是Logstash，L用于日志收集，界面插件有很多，Kibana还是很好用的，强烈安利一波，Elasticsearch+Kibana环境搭建还是很简单的，在此不做过多赘述&lt;/p&gt;

&lt;p&gt;进入正题，我们想要实现上图中百度搜索这种效果就需要把pinyin和ik进行组合搜索。先自定义分词器&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PUT demo
{
  &quot;index&quot;: {
      &quot;analysis&quot;: {
          &quot;filter&quot;: {
              &quot;index_pinyin&quot;: {
                    &quot;type&quot;: &quot;pinyin&quot;,
                    &quot;keep_original&quot;: true,
                    &quot;keep_first_letter&quot;: true,
                    &quot;keep_separate_first_letter&quot;: true,
                    &quot;keep_full_pinyin&quot;: true,
                    &quot;keep_joined_full_pinyin&quot;: true,
                    &quot;keep_none_chinese_in_joined_full_pinyin&quot;: false,
                    &quot;keep_none_chinese_in_first_letter&quot;: false,
                    &quot;none_chinese_pinyin_tokenize&quot;: false,
                    &quot;first_letter&quot;: &quot;prefix&quot;,
                    &quot;padding_char&quot;: &quot; &quot;,
                    &quot;lowercase&quot; : true,
                    &quot;remove_duplicated_term&quot; : true
                },
                &quot;search_pinyin&quot;: {
                    &quot;type&quot;: &quot;pinyin&quot;,
                    &quot;keep_original&quot;: true,
                    &quot;keep_first_letter&quot;: false,
                    &quot;keep_separate_first_letter&quot;: false,
                    &quot;keep_full_pinyin&quot;: false,
                    &quot;keep_joined_full_pinyin&quot;: true,
                    &quot;keep_none_chinese_in_joined_full_pinyin&quot;: true,
                    &quot;keep_none_chinese_in_first_letter&quot;: true,
                    &quot;none_chinese_pinyin_tokenize&quot;: false,
                    &quot;first_letter&quot;: &quot;prefix&quot;,
                    &quot;padding_char&quot;: &quot; &quot;,
                    &quot;lowercase&quot; : true,
                    &quot;remove_duplicated_term&quot; : true
                },
                &quot;length&quot;:{
                  &quot;type&quot;: &quot;length&quot;,
                  &quot;min&quot;:2
                }
                
            },
            &quot;analyzer&quot;: {
                &quot;index_ik_pinyin_analyzer&quot;: {
                    &quot;type&quot;: &quot;custom&quot;,
                    &quot;tokenizer&quot;: &quot;ik_max_word&quot;,
                    &quot;filter&quot;: [&quot;index_pinyin&quot;]
                },
                &quot;search_ik_pinyin_analyzer&quot;: {
                    &quot;type&quot;: &quot;custom&quot;,
                    &quot;tokenizer&quot;: &quot;ik_smart&quot;,
                    &quot;filter&quot;: [&quot;length&quot;,&quot;search_pinyin&quot;,&quot;length&quot;]
                }
            }
            
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;定义了两个分词器，analyzer中的index_ik_pinyin_analyzer和search_ik_pinyin_analyzer，在filter中定义了3个过滤器，两个是pinyin类型过滤器，还有一个是length过滤器，将分词后的长度最小值设置成2，也就是去掉长度为1的词&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PUT demo/items/_mapping
{
  &quot;properties&quot;: {
    &quot;name&quot;:{
      &quot;type&quot;: &quot;text&quot;,
      &quot;analyzer&quot;: &quot;index_ik_pinyin_analyzer&quot;,
      &quot;search_analyzer&quot;: &quot;search_ik_pinyin_analyzer&quot;,
      &quot;fields&quot;: {
        &quot;keyword&quot;:{
          &quot;type&quot;: &quot;keyword&quot;,
          &quot;ignore_above&quot;: 256
        }
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;设置mapping，type为items，只设置了一个字段name，index_ik_pinyin_analyzer用于索引，search_ik_pinyin_analyzer用于搜索，在ES中，索引做为名词就是索引的意思，做为动词可以理解成存储的意思&lt;/p&gt;

&lt;p&gt;通过bulk API批量操作数据&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST _bulk
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 1}}
{&quot;name&quot;: &quot;美国&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 2}}
{&quot;name&quot;: &quot;英国&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 3}}
{&quot;name&quot;: &quot;中国&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 4}}
{&quot;name&quot;: &quot;中华人民共和国&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 5}}
{&quot;name&quot;: &quot;gongheguo&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 6}}
{&quot;name&quot;: &quot;刘德华&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 7}}
{&quot;name&quot;: &quot;刘青云&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 8}}
{&quot;name&quot;: &quot;陕西省&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 9}}
{&quot;name&quot;: &quot;山西省&quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用match搜索“中华人民共和国”的全拼音结果如下图
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/search_pinyin.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用match搜索“中华人民共和国”的拼音首字母结果如下图
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/search_first_pinyin.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用match搜索“中华”结果如下图
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/search_term.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果对IK分词器的效果不是很满意，可以自己整理语料，放入词库中，自定义词库路径为&quot;config/analysis-ik/custom&quot;，同时需要修改IKAnalyzer.cfg.xml文件，在该文件中配置自定义词库的读取&lt;/p&gt;

&lt;p&gt;推荐一个分词工具，个人认为挺好用的，是由梁斌老师提供的&lt;a href=&quot;http://www.pullword.com/&quot;&gt;基于深度学习的中文在线抽词PullWord&lt;/a&gt;&lt;/p&gt;</content><author><name>true</name></author><category term="elasticsearch" /><category term="搜索引擎" /><summary type="html">Elasticsearch默认的分词器会将中文比如”你好”拆分成”你”和”好”这两个字，然后按照倒排索引进行存储，所以默认的分词不好用，大部分时候都会自己更换分词器以达到预期的效果。推荐一个很好用的分词器，众所周知的IK分词器</summary></entry><entry><title type="html">sbt打包程序</title><link href="http://localhost:4000/2018/12/19/sbt%E6%89%93%E5%8C%85%E7%A8%8B%E5%BA%8F.html" rel="alternate" type="text/html" title="sbt打包程序" /><published>2018-12-19T00:00:00+08:00</published><updated>2018-12-19T00:00:00+08:00</updated><id>http://localhost:4000/2018/12/19/sbt%E6%89%93%E5%8C%85%E7%A8%8B%E5%BA%8F</id><content type="html" xml:base="http://localhost:4000/2018/12/19/sbt%E6%89%93%E5%8C%85%E7%A8%8B%E5%BA%8F.html">&lt;p&gt;Assembly Jar（组合Jar）与普通Jar的区别就是Assembly Jar会将所有的依赖都打进Jar中，最后生成的包比较大&lt;/p&gt;

&lt;p&gt;打包spark程序步骤如下，sbt版本0.13.17：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 在project下创建plugins.sbt,并添加内容
    addSbtPlugin(&quot;com.eed3si9n&quot; % &quot;sbt-assembly&quot; % &quot;0.14.6&quot;)
    
2. 修改build.sbt文件，添加以下内容
    assemblyJarName in assembly := &quot;first-spark-assembly.jar&quot; # 配置jar的名字
    assemblyOption in assembly := (assemblyOption in assembly).value.copy(includeScala = false) # 把scala本身排除在组合jar之外，因为spark已经包含了scala

3. 运行 sbt clean assembly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;依赖项，%%表示测试时需要，一般为%； % “provided”表示此依赖不打入最终的jar文件内，提交到spark集群中所有spark相关的jar不需要打入到Assembly Jar中&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;libraryDependencies+=&quot;org.apache.spark&quot;%%&quot;spark-core&quot;%&quot;2.2.0&quot;%&quot;provided&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用阿里云的仓库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;resolvers+=&quot;aliyun Maven Repository&quot;at&quot;http://maven.aliyun.com/nexus/content/groups/public&quot;
externalResolvers:= Resolver.withDefaultResolvers(resolvers.value,mavenCentral=false)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;指定java版本&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;javacOptions++=Seq(&quot;-source&quot;,&quot;1.8&quot;,&quot;-target&quot;,&quot;1.8&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;指定主函数&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mainClass in Compile:=Some(&quot;org.apache.spark.WordCount&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果有些jar包maven仓库没有，而工程中确实要用到，你可以在项目根录下建立lib文件夹，将额外的jar放进去即可。&lt;br /&gt;
或者可以自定义lib文件夹的名称，例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;unmanagedBase := &quot;mylib&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;然后将用到的jar包放到工程根目录的mylib文件夹下，sbt会自动将lib下的jar包中的类加到最终的Assembly Jar中。&lt;/p&gt;

&lt;p&gt;sbt打包错误&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Unable to find credentials for [Sonatype Nexus Repository Manager @ nx.company.cn]

解决方案：build.sbt文件中添加
credentials += Credentials(&quot;Sonatype Nexus Repository Manager&quot;, &quot;nx.company.cn&quot;, &quot;user&quot;, &quot;password&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;sbt-native-packager&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 在project下创建plugins.sbt,并添加内容
addSbtPlugin(&quot;com.typesafe.sbt&quot; % &quot;sbt-native-packager&quot; % &quot;1.3.15&quot;)

2. 在build.sbt中开启插件支持,JavaAppPackaging只是一种,下面是举例
enablePlugins(JavaAppPackaging)

3. sbt &amp;lt;config-scope&amp;gt;:&amp;lt;config-type&amp;gt;

	例：sbt universal:packageBin

	universal:packageBin - Generates a universal zip file
	universal:packageZipTarball - Generates a universal tgz file
	debian:packageBin - Generates a deb
	docker:publishLocal - Builds a Docker image using the local Docker server
	rpm:packageBin - Generates an rpm
	universal:packageOsxDmg - Generates a DMG file with the same contents as the universal zip/tgz.
	windows:packageBin - Generates an MSI
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;sbt-native-packager使用参见&lt;a href=&quot;https://www.scala-sbt.org/sbt-native-packager/index.html&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;</content><author><name>true</name></author><category term="Scala" /><category term="Sbt" /><category term="打包" /><category term="Spark" /><summary type="html">Assembly Jar（组合Jar）与普通Jar的区别就是Assembly Jar会将所有的依赖都打进Jar中，最后生成的包比较大</summary></entry><entry><title type="html">Linux常用命令</title><link href="http://localhost:4000/2018/12/16/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html" rel="alternate" type="text/html" title="Linux常用命令" /><published>2018-12-16T00:00:00+08:00</published><updated>2018-12-16T00:00:00+08:00</updated><id>http://localhost:4000/2018/12/16/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4</id><content type="html" xml:base="http://localhost:4000/2018/12/16/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html">&lt;p&gt;查看当前所在的工作目录的全路径&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看当前系统的时间&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;date
date +%Y-%m-%d   # 按后面的格式显示当前时间，2018-12-16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看当前有谁在线（在当前的服务器上）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;who 或者 w
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看最近的登陆历史记录&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;last
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;关机/重启&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;关机（必须用root用户）
shutdown -h now  # 立刻关机
shutdown -h +10  #  10分钟以后关机
shutdown -h 12:00:00  #12点整的时候关机

重启
shutdown -r now
reboot   # 等于立刻重启
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;清屏&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;clear 或者 ctrl + l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;挂起当前进程&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ctrl+z   # 进程会挂起到后台
bg jobid  # 让进程在后台继续执行
fg jobid   # 让进程回到前台
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;切换工作目录&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~     # 切换到用户主目录（家目录）
cd -     #  回退到上次所在的目录
cd  什么路径都不带，则回到用户的主目录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建文件夹&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir hello #创建文件夹
mkdir -p  aaa/bbb/ccc   # 级联创建文件夹
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;删除文件夹&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rmdir  aaa   # 可以删除空文件夹
rm  -r  aaa   # 可以把aaa整个文件夹及其中的所有子文件及文件夹全部删除
rm  -rf  aaa   # 强制删除aaa及其子文件夹、文件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改文件夹名称&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mv aaa boy   #mv本质上是移动
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;touch somefile.1   # 创建一个空文件somefile.1
echo &quot;hi,boy&quot; &amp;gt; somefile.2    ## 利用重定向“&amp;gt;”的功能，将一条指令的输出结果写入到一个文件中，会覆盖原文件内容，如果指定的文件不存在，则会创建出来
vi somefile.3   #编辑文件，编辑完后保存，如果不存在则会创建新的文件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;拷贝&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp somefile.1 /home/hadoop/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看文件内容&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat somefile      #一次性将文件内容全部输出（控制台）
cat file -n   #显示文件内容及行号
more somefile     # 可以翻页查看, 下翻一页(空格)    上翻一页（b）   退出（q）
less somefile      #可以翻页查看,下翻一页(空格)    上翻一页（b），上翻一行(↑)  下翻一行（↓）  可以搜索关键字（/keyword）
tail -10 install.log  查看文件尾部的10行
head -10 install.log   查看文件头部的10行
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;压缩与解压&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、gzip压缩，压缩后a.txt会不存在，生成压缩文件a.txt.gz
    gzip a.txt
2、解压
    gunzip a.txt.gz
    gzip -d a.txt.gz
    
3、bzip2压缩，压缩后a.txt不存在，会生成压缩文件a.txt.bz2
    bzip2 a.txt
4、解压
    bunzip2 a.bz2
    bzip2 -d a.bz2
    
5、打包并压缩
    tar -zcvf a.tar.gz  aaa/   #会打包aaa文件夹并压缩
8、解包并解压缩
    tar  -zxvf  a.tar.gz
    解压到/usr下
    tar  -zxvf  a.tar.gz  -C  /usr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;常用查找命令的使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、查找可执行的命令所在的路径：
which     # which ls 查看ls命令所在的路径

2、查找可执行的命令的位置：
whereis  # whereis ls 查看ls命令所在的路径

3、从某个文件夹开始查找文件
find / -name &quot;hadoop*&quot; #在根目录下查找文件名以hadoop为前缀的文件
find / -name &quot;hadoop*&quot; -ls

4、查找并删除
find / -name &quot;hadoop*&quot; -ok rm {} \;
find / -name &quot;hadoop*&quot; -exec rm {} \;

5、查找用户为hadoop的文件
find  /usr  -user  hadoop  -ls

6、查找用户为hadoop的文件夹
find /home -user hadoop -type d -ls  # -type指定文件类型，d代表目录

7、查找权限为777的文件夹
find / -perm -777 -type d -ls

8、查看当前目录下文件个数
find ./ | wc -l

9、显示命令历史
history
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;文件权限的操作&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;drwxr-xr-x      （也可以用二进制表示  111 101 101  --&amp;gt;  755）

d：标识节点类型（d：文件夹   -：文件  l:链接）
r：可读   w：可写    x：可执行 
第一组rwx：  # 表示这个文件的拥有者对它的权限：可读可写可执行
第二组r-x：  # 表示这个文件的所属组用户对它的权限：可读，不可写，可执行
第三组r-x：  # 表示这个文件的其他用户（相对于上面两类用户）对它的权限：可读，不可写，可执行

chmod g-rw haha.dat		 # 表示将haha.dat对所属组的rw权限取消
chmod o-rw haha.dat		 # 表示将haha.dat对其他人的rw权限取消
chmod u+x haha.dat		 # 表示将haha.dat对所属用户的权限增加x
chmod a-x haha.dat       # 表示将haha.dat对所用户取消x权限


也可以用数字的方式来修改权限
chmod 664 haha.dat   

如果要将一个文件夹的所有内容权限统一修改，则可以-R参数
chmod -R 770 aaa/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改文件所有权&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;只有root权限能执行&amp;gt;
chown angela  aaa		## 改变所属用户
chown :angela  aaa		## 改变所属组
chown angela:angela aaa/	## 同时修改所属用户和所属组
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;基本用户管理&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;添加一个用户：
useradd spark
passwd  spark     #根据提示设置密码即可

删除一个用户：
userdel -r spark     #加一个-r就表示把用户及用户的主目录都删除
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;为用户配置sudo权限&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;用root编辑 vi /etc/sudoers
在文件的如下位置，为hadoop添加一行即可
root    ALL=(ALL)       ALL     
hadoop  ALL=(ALL)       ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;统计文件或文件夹的大小&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -sh  /mnt/cdrom/packages  #查看文件夹大小
df -h    #查看磁盘的空间
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看内存大小&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;free -h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改IP&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(重启后永久生效)centos
vi /etc/sysconfig/network-scripts/ifcfg-eth0

(重启后无效)
ifconfig eth0 192.168.12.22
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;关闭防火墙&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;centos7
    systemctl stop firewalld   #关闭防火墙
    systemctl disable firewalld #设置开机禁止自启动
    
ubuntu 
    ufw stop #关闭防火墙
    ufw disable #设置开机禁止自启动
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上传下载&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp a.txt root@192.168.0.10:~          #上传a.txt到root用户的主目录下

scp root@192.168.0.10:~/a.txt .        #下载a.txt到当前目录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看cpu核数&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lscpu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看程序的binary文件所在路径&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;示例：which python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看程序的搜索路径&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;示例：whereis python
当系统中安装了同一软件的多个版本时，不确定使用的是哪个版本时，这个命令就能派上用场
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;按时间排序，以列表的方式显示目录项&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -lrt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建符号链接/硬链接&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ln cc ccAgain :硬连接；删除一个，将仍能找到；
ln -s cc ccTo :符号链接(软链接)；删除源，另一个无法使用；（后面一个ccTo 为新建的文件）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;列出所有端口 (包括监听和未监听的)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;列出所有有监听的服务状态&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat -l

显示进程ID
netstat -p

如果显示不出来，则可以使用lsof -i:port
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;列出所有 tcp 端口&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat -at
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看cpu信息&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lscpu 或者 cat /proc/cpuinfo

查看核数
    lscpu中CPUS信息  
    或者
    cat /proc/cpuinfo | grep processor | wc -l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看cpu状态&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;top
按CPU使用率排序 P
按内存RES使用率排序 M
显示程序全路径 c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看特定端口被哪个进程使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lsof -i:port
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>true</name></author><category term="Linux" /><summary type="html">查看当前所在的工作目录的全路径 pwd 查看当前系统的时间</summary></entry><entry><title type="html">KVM虚拟化技术</title><link href="http://localhost:4000/2018/12/14/KVM%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF.html" rel="alternate" type="text/html" title="KVM虚拟化技术" /><published>2018-12-14T00:00:00+08:00</published><updated>2018-12-14T00:00:00+08:00</updated><id>http://localhost:4000/2018/12/14/KVM%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF</id><content type="html" xml:base="http://localhost:4000/2018/12/14/KVM%E8%99%9A%E6%8B%9F%E5%8C%96%E6%8A%80%E6%9C%AF.html">&lt;p&gt;宿主机平台是Centos和Ubuntu搭建虚拟机会有一些区别，所以对二者都进行介绍一下&lt;/p&gt;

&lt;p&gt;宿主机：Centos7&lt;/p&gt;

&lt;p&gt;查看宿主机IP，如果没有ifconfig命令则需要安装网络插件包：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yum &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;net-tools
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装KVM&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;kvm
yum &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;qemu-kvm python-virtinst libvirt libvirt-python virt-manager libguestfs-tools bridge-utils virt-install
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;检测是否安装成功&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lsmod | grep kvm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果安装成功则显示如下，关键是前面的kvm_intel和kvm&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;kvm_intel  162153  0
kvm        525259  1 kvm_intel
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;开启kvm服务&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl start libvirtd.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建虚拟网桥连接&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /etc/sysconfig/network-scripts/

vi ifcfg-br0

&lt;span class=&quot;c&quot;&gt;#在文件中输入如下内容&lt;/span&gt;
&lt;span class=&quot;nv&quot;&gt;BOOTPROTO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;static
&lt;span class=&quot;nv&quot;&gt;ONBOOT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;YES
&lt;span class=&quot;nv&quot;&gt;DEVICE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;br0
&lt;span class=&quot;nv&quot;&gt;NAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;br0
&lt;span class=&quot;nv&quot;&gt;TYPE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Bridge
&lt;span class=&quot;nv&quot;&gt;IPADDR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.95
&lt;span class=&quot;nv&quot;&gt;NETMASK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;255.255.255.0
&lt;span class=&quot;nv&quot;&gt;GATEWAY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;192.168.1.254
&lt;span class=&quot;nv&quot;&gt;DNS1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;114.114.114.114
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;将刚创建的网桥连接添加到当前网卡配置中&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;示例在eth0/em1中添加BRIDGE=br0(注意：BRIDGE要大写)，保留name,device,onboot属性即可，其他的可以注释掉
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;或者使用如下配置网桥&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 查看当前宿主机网络配置所使用的网卡，选择需要桥接的网卡。转去宿主机的/etc/sysconfig/network-scripts目录下。 
2. 假如当前配置的物理网卡为eth0，我们将eth0的ip地址桥接出去。cp -a ifcfg-eth0 ifcfg-br0 
3. 将ifcfg-eth0文件中配置的ip地址、掩码、网关、DNS等信息统统删掉，并增加一行BRIDGE=br0 
4. 将ifcfg-br0文件中的UUID IPV6的信息统统删掉，将TYPE修改为Bridge，NAME和DEVICE修改为br0. 修改完毕之后的内容示例如下。 
5. 将网络服务重新启动或者将宿主机重新启动使得配置生效。使用ifconfig命令查看ip地址信息。
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改完如下图所示
&lt;img src=&quot;/blog/blog_kvm/ifcfg-em1.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;重启网络&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;systemctl restart network
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看虚拟网卡&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;brctl show
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建虚拟机&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo virt-install --name test --ram 4096 --disk path=/var/lib/libvirt/images/test.img,size=200 --vcpus 2 --os-type linux --network bridge=br0 --graphics none --virt-type kvm --location /tmp/CentOS-7-x86_64-DVD-1804.iso --os-variant none --extra-args='console=ttyS0' 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用命令之后会出现下图界面，然后需要在命令行中配置虚拟机信息
&lt;img src=&quot;/blog/blog_kvm/process.jpg&quot; alt=&quot;image&quot; /&gt;
&lt;img src=&quot;/blog/blog_kvm/install.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;宿主机：Ubuntu16.04&lt;/p&gt;

&lt;p&gt;安装kvm&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; sudo apt-get install qemu-kvm qemu-system libvirt-bin  bridge-utils virt-manager
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建虚拟网卡：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi /etc/network/interfaces
   
auto lo
iface lo inet loopback

auto br0
iface br0 inet static
address 10.0.101.10
netmask 255.255.255.0
gateway 10.0.101.254
dns-nameservers 114.114.114.114
bridge_ports eno1
bridge_stp on
bridge_fd 0
bridge_maxwait 0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Ubuntu创建虚拟网卡后需要重启系统才会生效&lt;/p&gt;

&lt;p&gt;使用图形化界面virt-manager安装方式，之后在界面上配置虚拟机信息&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo virt-manager
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;命令行创建：&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;virt-install &lt;span class=&quot;nt&quot;&gt;--virt-type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;kvm &lt;span class=&quot;nt&quot;&gt;--name&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;vm1 &lt;span class=&quot;nt&quot;&gt;--vcpus&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;2 &lt;span class=&quot;nt&quot;&gt;--memory&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;65536 &lt;span class=&quot;nt&quot;&gt;--location&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/tmp/CentOS-7-x86_64-DVD-1804.iso &lt;span class=&quot;nt&quot;&gt;--disk&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/var/lib/libvirt/images/shebao.qcow2,size&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;200,format&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;qcow2 &lt;span class=&quot;nt&quot;&gt;--network&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;bridge&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;br0 &lt;span class=&quot;nt&quot;&gt;--graphics&lt;/span&gt; none &lt;span class=&quot;nt&quot;&gt;--extra-args&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'console=ttyS0'&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--force&lt;/span&gt;   
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;kvm常用命令&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virsh list              #查看在运行的虚拟机
virsh list --all        #查看所有虚拟机（关闭的也在内）
virsh start  test	    #启动该虚拟机，test是创建时设置的虚拟机名字
virsh reboot test       #重启虚拟机
virsh destroy test	    #强制关闭该虚拟机，但并非真的销毁该虚拟机，只是关闭而已    
virsh undefine test     #移除虚拟机,被该指令删除后不能启动
virsh console + 域名（虚拟机的名称） #连接虚拟机
virsh autostart + 域名  #虚拟机随宿主机启动
virsh auotstart --disable +域名 #取消自启动
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;彻底删除虚拟机&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virsh destroy &lt;span class=&quot;nb&quot;&gt;test
&lt;/span&gt;virsh undefine &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--remove-all-storage&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改虚拟机CPU，内存，磁盘，修改完后需要重启虚拟机生效&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;virsh edit test.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;ubuntu虚拟机（在宿主机上安装的虚拟机系统为Ubuntu）开启virsh console支持，可以在宿主机上使用virsh console test连接到虚拟机test上&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sudo systemctl enable serial-getty@ttyS0.service
sudo systemctl start serial-getty@ttyS0.service
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;kvm虚拟机静态迁移&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 确定虚拟机处于关闭状态
2. 查看虚拟机的磁盘配置文件
    virsh domblklist test
3. 导入虚拟机的配置文件
    virsh dumpxml test &amp;gt; /tmp/test.xml
4. 拷贝配置文件到目标主机上
5. 拷贝虚拟机的磁盘文件到目标主机上
6. 再目标主机上定义注册虚拟主机
    virsh define /etc/libvirt/qemu/test.xml 
7. 开启虚拟机
    virsh start test
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>true</name></author><category term="KVM" /><category term="Linux" /><summary type="html">宿主机平台是Centos和Ubuntu搭建虚拟机会有一些区别，所以对二者都进行介绍一下</summary></entry><entry><title type="html">python程序打包</title><link href="http://localhost:4000/2018/12/13/python%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85%E8%87%B3%E6%9C%AC%E5%9C%B0%E5%BA%93.html" rel="alternate" type="text/html" title="python程序打包" /><published>2018-12-13T00:00:00+08:00</published><updated>2018-12-13T00:00:00+08:00</updated><id>http://localhost:4000/2018/12/13/python%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85%E8%87%B3%E6%9C%AC%E5%9C%B0%E5%BA%93</id><content type="html" xml:base="http://localhost:4000/2018/12/13/python%E7%A8%8B%E5%BA%8F%E6%89%93%E5%8C%85%E8%87%B3%E6%9C%AC%E5%9C%B0%E5%BA%93.html">&lt;p&gt;有时，自己写的一个工具，复用性很高，当前脚本中需要用到，在其他脚本中也需要使用，这时，就需要将脚本打成可以使用pip install的包，安装到本地库&lt;/p&gt;

&lt;p&gt;下面演示案例，目的是把demo下的脚本打成包，demo的结构目录如下图
&lt;img src=&quot;/blog/blog_python_package/catalog.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;解释一下__init__.py文件
在Python中，一个.py文件就称之为一个模块（Module）
为了避免模块名冲突，Python又引入了按目录来组织模块的方法，称为包（Package）
每一个包目录下面都会有一个__init__.py的文件，这个文件是必须存在的，
否则，Python就把这个目录当成普通目录，而不是一个包。__init__.py可以是空文件，也可以有Python代码
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;也就是说hello_world是一个包，hello.py为模块&lt;/p&gt;

&lt;p&gt;hello.py文件中的代码如下，只有一个的say_hello方法&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;say_hello&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;hello,{}&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;此时，我们要在demo目录下创建setup.py文件&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;setuptools&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find_packages&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'demo'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;#pip安装成功后pip list显示的名字&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;version&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'0.0.1'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#版本号&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;description&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'test package'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;license&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'MIT License'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;

    &lt;span class=&quot;n&quot;&gt;author&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'Nengjun'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;author_email&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ahhunengjun@163.com'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;url&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;https://github.com/WhisperLoli&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#项目主页，如果有的话&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;packages&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;find_packages&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;platforms&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'any'&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;setup.py写完之后，需要检查一下&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python setup.py check &lt;span class=&quot;c&quot;&gt;#检查一下有无错误，setup中是否缺少参数&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;打包需要使用到docutils包，所以先安装一下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip install docutils
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;之后打包代码&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python setup.py sdist
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_python_package/package.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;完成后新的目录如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_python_package/new_catalog.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;会生成一个dist文件夹，进入该文件夹中&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;dist
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;demo-0.0.1.tar.gz &lt;span class=&quot;c&quot;&gt;#安装打包的文件&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装完成后，可以使用如下命令查看是否安装成功，如果安装成功会显示安装的名字和版本号&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pip list | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;demo*&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;安装成功即可在代码中使用
&lt;img src=&quot;/blog/blog_python_package/success.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;</content><author><name>true</name></author><category term="打包" /><category term="python" /><summary type="html">有时，自己写的一个工具，复用性很高，当前脚本中需要用到，在其他脚本中也需要使用，这时，就需要将脚本打成可以使用pip install的包，安装到本地库</summary></entry><entry><title type="html">爬取抖音APP视频</title><link href="http://localhost:4000/2018/12/10/%E8%87%AA%E5%8A%A8%E5%8C%96%E7%88%AC%E5%8F%96%E6%8A%96%E9%9F%B3%E8%A7%86%E9%A2%91.html" rel="alternate" type="text/html" title="爬取抖音APP视频" /><published>2018-12-10T00:12:13+08:00</published><updated>2018-12-10T00:12:13+08:00</updated><id>http://localhost:4000/2018/12/10/%E8%87%AA%E5%8A%A8%E5%8C%96%E7%88%AC%E5%8F%96%E6%8A%96%E9%9F%B3%E8%A7%86%E9%A2%91</id><content type="html" xml:base="http://localhost:4000/2018/12/10/%E8%87%AA%E5%8A%A8%E5%8C%96%E7%88%AC%E5%8F%96%E6%8A%96%E9%9F%B3%E8%A7%86%E9%A2%91.html">&lt;p&gt;先介绍一下环境与工具&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;操作系统：MacOS 
手机操作系统：Android
手机型号：荣耀8
mitmproxy: 中间人代理【man-in-the-middle proxy】，对手机端的请求进行拦截
Appium:自动化测试工具
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;环境搭建&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;在电脑上安装mitmproxy，使用如下命令安装即可&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; brew install mitmproxy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;启用代理&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; mitmproxy -p 8080 #在命令行中运行,8080为代理端口
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;代理服务器启动后，再配置手机端连接到代理服务器，注意，手机需要与电脑处于同一个局域网下，手机连接WIFI时，点击显示高级选项，配置代理，不同的手机配置代理的地方可能不同，如下图所示：&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/blog_spider_douyin/mobileconfigproxy.webp&quot; width=&quot;390px&quot; height=&quot;690px&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;服务器主机名填写电脑的IP地址，查看电脑IP命令如下：&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ifconfig #查看电脑IP地址
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;服务器端口填写在电脑上启动mitmproxy时设置的端口，然后连接WIFI，接下来需要在手机端安装证书&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; cd ~/.mitmproxy

 ls	 #会显示该文件夹下的所有证书
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;将mitmproxy-ca-cert.cer文件发送到手机上，修改后缀名为crt，然后点击安装，会弹出如下所示的界面，凭据用途选择VPN和应用&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/blog_spider_douyin/certificate.webp&quot; width=&quot;390px&quot; height=&quot;690px&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;在手机上打开抖音，刷视频，在电脑上就会出现如下界面，可以抓包看到所有请求，在图中，我们可以看到视频请求返回类型是video/mp4，通过返回类型，我们可以知道哪些URL是用于请求短视频，可以看到短视频请求的域名与其他请求的域名是不同的，一级域名为xigua.com&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/blog_spider_douyin/requests.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;配置android环境&lt;/p&gt;

    &lt;p&gt;因为手机的操作系统是Android，所以还需要安装android sdk，&lt;a href=&quot;https://note.youdao.com/&quot;&gt;点击下载&lt;/a&gt;，下载完后解压安装，进入到解压目录，再进入到tools目录，执行如下命令&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ./android 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;会弹出如下窗口&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/blog_spider_douyin/sdkmanager.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;玩过安卓开发的同学肯定都很熟悉了，先查看自己手机的安卓系统版本，然后下载Tools和Android 8.0.0(我的手机安卓版本是8.0.0)，之后需要配置环境变量，安卓环境变量与jdk环境变量，&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; vi ~/.bash_profile #在该文件中添加环境变量
	
 export ANDROID_HOME=&quot;/Users/admin/software/android-sdk-macosx&quot; #配置自己的android sdk解压目录
 export PATH=&quot;$PATH:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools&quot;
	
 export JAVA_HOME=&quot;/Library/Java/JavaVirtualMachines/jdk1.8.0_131.jdk/Contents/Home&quot; #配置自己的jdk安装目录
 export PATH=&quot;$JAVA_HOME/bin:$PATH&quot;
	
 source ~/.bash_profile #使环境变量生效
	
 env #查看当前环境变量
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;adb调试&lt;/p&gt;

    &lt;p&gt;手机连接到电脑后，在终端输入命令&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; adb devices #会显示当前的连接设备	
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;如果连接设备为空，则需要进行一些其他操作，以下是我的解决方案&lt;/p&gt;

    &lt;p&gt;4.1 生成adb_usb.ini文件&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; cd ~/.android
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;查看有无adb_usb.ini文件，没有的话则执行下面的命令&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; android update adb #会生成adb_usb.ini文件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;再输入如下命令&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; system_profiler SPUSBDataType #查看Mac系统所有已连接USB设备信息
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/blog_spider_douyin/vendorid.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;找到Vendor ID的值，将值0x8086添加到adb_usb.ini文件中&lt;/p&gt;

    &lt;p&gt;4.2 进入手机设置，【设置】-&amp;gt;【系统】-&amp;gt;【关于手机】-&amp;gt; 连续点击7次【版本号】，则会开启开发者模式&lt;/p&gt;

    &lt;p&gt;4.3 【设置】-&amp;gt;【系统】-&amp;gt;【开发人员选项】，开启【usb调试】，找到【usb配置】后，随意切换一个，再切换成【MTP】&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/blog_spider_douyin/startusb.webp&quot; width=&quot;390px&quot; height=&quot;690px&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/blog_spider_douyin/configusb.webp&quot; width=&quot;390px&quot; height=&quot;690px&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;4.4 解决未授权&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; adb devices #显示连接设备
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/blog_spider_douyin/listdevices.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;如果上图红框处出现的是unauthorized，则需要在手机【开发人员选项】下点击【撤销USB调试授权】，然后找到【usb配置】，随意切换一个，再切换成【MTP】&lt;/p&gt;

    &lt;p&gt;连接设备成功的界面如上图所示&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;配置appium&lt;/p&gt;

    &lt;p&gt;在电脑上安装appium，下载dmg安装包安装或者使用命令行安装都行。
 打开appium，在configurations中配置JAVA_HOME与ANDROID_HOME，完成后点击Start Server&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/blog_spider_douyin/appiumui.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;再点击上图中红色框中的按钮&lt;/p&gt;

    &lt;p&gt;&lt;img src=&quot;/blog/blog_spider_douyin/appiumconfig.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;参数讲解&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; platformName:平台名称，一般是Android或iOS
 deviceName:设备名称，手机的具体类型，可以随便给
 appPackage:App程序包名
 appActivity:入口Activity名，通常以.开头
	
 adb logcat&amp;gt; ~/appium.log  #并且在手机打开抖音app，在生成的appium.log中查找appPackage，appActivity的值，之后Start Session，查看是否能够控制手机，参数有无问题
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;编写程序&lt;/p&gt;

&lt;p&gt;mitmproxy事件里面有3个事件是比较重要的，&lt;a href=&quot;https://docs.mitmproxy.org/stable/&quot;&gt;mitmproxy官方文档&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;start 启动的时候被调用，会替换当前的插件，可以用此事件注册过滤器.
request(flow) 当发送请求时，被调用.
response(flow) 当接收到回复时被调用.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;requests&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;logging&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 文件路径&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'/Users/admin/Desktop/vedios/'&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;basicConfig&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INFO&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#打印的日志级别&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'mitmproxy.log'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#日志文件名&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;filemode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'a'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#模式，有w和a，w就是写模式，每次都会重新写日志，覆盖之前的日志，a是追加模式，默认如果不写的话，就是追加模式&lt;/span&gt;
                    &lt;span class=&quot;n&quot;&gt;format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;'&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(asctime)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s - &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(pathname)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s[line:&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(lineno)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;d] - &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(levelname)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;%(message)&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;s'&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#日志格式&lt;/span&gt;
                   &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flow&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;global&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;.ixigua.com/&quot;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 过滤掉不需要的url&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;logging&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;url&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#记录url信息&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 设置视频名&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'.mp4'&lt;/span&gt;
        
        &lt;span class=&quot;c&quot;&gt;# 将视频写入文件夹&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filename&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'ab'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flow&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;response&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;content&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flush&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;num&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;将上述代码保存成pymobile.py文件，运行mitmproxy命令时使用如下命令&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mitmproxy &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 8080 &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; pymobile.py 		&lt;span class=&quot;c&quot;&gt;#启动时运行该脚本&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;在IDE中编写如下代码，文件名为simulation.py&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;appium&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;# 报错No module named 'appium',原因：没有安装appium client, 解决方案pip install appium-python-client&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;time&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 初始化配置，设置Desired Capabilities参数，使用上面在appium中测试的参数&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desired_caps&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;platformName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;Android&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;deviceName&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;device&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;appPackage&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;com.ss.android.ugc.aweme&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
            &lt;span class=&quot;s&quot;&gt;&quot;appActivity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;.main.MainActivity&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	    &lt;span class=&quot;s&quot;&gt;&quot;noReset&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# 默认为False，打开APP后之前的登录会被注销，且需要重新对APP进行授权，进入初始化状态（类似于刚下载的APP）,所以使用True&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 指定Appium Server&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'http://localhost:4723/wd/hub'&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 新建一个Session&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;webdriver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Remote&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;server&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;desired_caps&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 设置滑动初始坐标和滑动距离&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;500&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_y&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1500&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;distance&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1300&lt;/span&gt;
        
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        
    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;c&quot;&gt;# 无限滑动&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# 模拟滑动&lt;/span&gt;
            &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;driver&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;swipe&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_y&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_x&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start_y&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;distance&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;c&quot;&gt;# 设置延时等待&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;comments&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#开启会先睡眠10s&lt;/span&gt;
        &lt;span class=&quot;bp&quot;&gt;self&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;scroll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#滑动屏幕&lt;/span&gt;
        
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;'__main__'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Action&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;action&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;至此，所有工作已完成&lt;/p&gt;

&lt;p&gt;自动化爬取视频操作步骤：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 启动代理mitmproxy
	mitmproxy -p 8080 -s pymobile.py
2. 手机配置代理
3. 打开appium，start server
4. 运行simulation.py文件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;运行时，可以使用如下命令查看到代码中设置的日志在不断的打印&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;tail -f mitmproxy.log
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;爬取的视频如下，是不带有抖音水印的噢！&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_spider_douyin/video.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;</content><author><name>true</name></author><category term="爬虫" /><category term="appium" /><category term="python" /><category term="mitmproxy" /><summary type="html">先介绍一下环境与工具 操作系统：MacOS 手机操作系统：Android 手机型号：荣耀8 mitmproxy: 中间人代理【man-in-the-middle proxy】，对手机端的请求进行拦截 Appium:自动化测试工具 环境搭建</summary></entry></feed>