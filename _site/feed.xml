<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2020-05-13T19:10:30+08:00</updated><id>http://localhost:4000/</id><title type="html">Loli</title><subtitle>For dream</subtitle><author><name>true</name></author><entry><title type="html">Spark源码学习笔记（一）</title><link href="http://localhost:4000/2020/05/11/spark_shell_process.html" rel="alternate" type="text/html" title="Spark源码学习笔记（一）" /><published>2020-05-11T19:01:29+08:00</published><updated>2020-05-11T19:01:29+08:00</updated><id>http://localhost:4000/2020/05/11/spark_shell_process</id><content type="html" xml:base="http://localhost:4000/2020/05/11/spark_shell_process.html">&lt;p&gt;一直想研究spark源码来着，希望自己也能坚持下去吧。&lt;/p&gt;

&lt;p&gt;先从github clone一份spark源码，我下载的源码版本是2.3.3版本。&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/spark_source_code/source_code_1/spark-shell.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;从图中，我们可以看到，用户在客户端执行spark-shell命令底层其实执行的还是spark-submit操作，相当于用一个shell包装了spark-submit。主类为org.apache.spark.repl.Main，该类位于spark-repl模块下。REPL的中文含义是交互式解释器，使用spark-shell其实就是交互式编程。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/blog/spark_source_code/source_code_1/spark-shell-main.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;进入主函数，可以看到执行了一堆环境加载操作，最后执行interp.process(setting)，调用SparkILoop类的process方法，该类继承自ILoop，process方法并未重写，进入父类查看process方法&lt;/p&gt;

&lt;/blockquote&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;// start an interpreter with the given settings
&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Boolean&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;savingContextLoader&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;this&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;createInterpreter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;// sets in to some kind of reader depending on environmental cues
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in0&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fold&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chooseReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SimpleReader&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;interactive&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;globalFuture&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;future&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;intp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;initializeSynchronous&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;loopPostInit&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;intp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;reporter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hasErrors&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;loadFiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;printWelcome&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;  
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;LineResults&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;EOF&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;out&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Properties&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shellInterruptedString&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;_&lt;/span&gt;               &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;AbstractOrMissingHandler&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;finally&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;closeInterpreter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
	&lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;又是做了很多初始化工作，接着加载配置文件loadFiles(settings)，该方法在SparkILoop类中被重写，在子类继承的方法中调用重写的方法，会调用SparkILoop重写后的loadFiles方法&lt;/p&gt;

&lt;/blockquote&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;cm&quot;&gt;/**
   * We override `loadFiles` because we need to initialize Spark *before* the REPL
   * sees any files, so that the Spark context is visible in those files. This is a bit of a
   * hack, but there isn't another hook available to us at this point.
   */&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;override&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loadFiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Unit&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;initializeSpark&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;super&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;loadFiles&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;settings&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;看方法名和注释都能知道，先初始化spark对象，再加载配置文件&lt;/p&gt;

&lt;/blockquote&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initializationCommands&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;&quot;&quot;
    @transient val spark = if (org.apache.spark.repl.Main.sparkSession != null) {
        org.apache.spark.repl.Main.sparkSession
      } else {
        org.apache.spark.repl.Main.createSparkSession()
      }
    @transient val sc = {
      val _sc = spark.sparkContext
      if (_sc.getConf.getBoolean(&quot;spark.ui.reverseProxy&quot;, false)) {
        val proxyUrl = _sc.getConf.get(&quot;spark.ui.reverseProxyUrl&quot;, null)
        if (proxyUrl != null) {
          println(
            s&quot;Spark Context Web UI is available at ${proxyUrl}/proxy/${_sc.applicationId}&quot;)
        } else {
          println(s&quot;Spark Context Web UI is available at Spark Master Public URL&quot;)
        }
      } else {
        _sc.uiWebUrl.foreach {
          webUrl =&amp;gt; println(s&quot;Spark context Web UI available at ${webUrl}&quot;)
        }
      }
      println(&quot;Spark context available as 'sc' &quot; +
        s&quot;(master = ${_sc.master}, app id = ${_sc.applicationId}).&quot;)
      println(&quot;Spark session available as 'spark'.&quot;)
      _sc
    }
    &quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;import org.apache.spark.SparkContext._&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;import spark.implicits._&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;import spark.sql&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;s&quot;&gt;&quot;import org.apache.spark.sql.functions._&quot;&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initializeSpark&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;intp&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;beQuietDuring&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;n&quot;&gt;savingReplayStack&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// remove the commands from session history.
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;initializationCommands&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;foreach&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;processLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
      &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;initializationCommands.foreach(processLine)调用processLine方法执行initializationCommands对象的每个元素，创建SparkSession对象，SparkContext对象，获取配置信息，然后打印，加载完配置文件后，执行process方法中的printWelcome方法，loadFiles和printWelcome方法执行完成后，用户就可以看到如下效果
&lt;img src=&quot;/blog/spark_source_code/source_code_1/spark_welcome.jpg&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;/blockquote&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; &lt;span class=&quot;cm&quot;&gt;/** The main read-eval-print loop for the repl.  It calls
   *  command() for each line of input, and stops when
   *  command() returns false.
   */&lt;/span&gt;
  &lt;span class=&quot;nd&quot;&gt;@tailrec&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;final&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;LineResult&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;nn&quot;&gt;LineResults._&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;readOneLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;match&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;null&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;EOF&lt;/span&gt;
      &lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;line&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;try&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;processLine&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;line&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;catch&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;crashRecovery&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;loop&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ERR&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;接着执行loop()方法，loop方法内部调用readOneLine循环读取用户的输入，使用processLine处理用户的输入信息，发生异常catch时执行crashRecovery函数，比如import的包不存在之类的，可以恢复正常进行如上，processLine方法执行成功后继续调用loop方法，递归调用&lt;/p&gt;

  &lt;p&gt;loop方法还使用了严格尾递归检查注解。对于是否是严格尾递归，若不能自行判断，可使用Scala提供的尾递归标注@scala.annotation.tailrec，这个符号除了可以标识尾递归外，更重要的是编译器会检查该函数是否真的尾递归，若不是，会导致编译错误&lt;/p&gt;

  &lt;p&gt;如上就是spark-shell的整个执行流程&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>true</name></author><category term="Spark" /><summary type="html">一直想研究spark源码来着，希望自己也能坚持下去吧。</summary></entry><entry><title type="html">Spark踩坑记（二）</title><link href="http://localhost:4000/2020/04/13/spark_hole_two.html" rel="alternate" type="text/html" title="Spark踩坑记（二）" /><published>2020-04-13T20:25:43+08:00</published><updated>2020-04-13T20:25:43+08:00</updated><id>http://localhost:4000/2020/04/13/spark_hole_two</id><content type="html" xml:base="http://localhost:4000/2020/04/13/spark_hole_two.html">&lt;blockquote&gt;
  &lt;p&gt;前不久提交了个任务到集群中，死活不通过，查看日志，发现guava包冲突。项目中用了个第三方包，该第三方包使用了guava包，版本是19.0。而spark集群内部也会使用guava包，集群用的是CDH的，spark版本2.3，但是我最后查到guava版本竟然是11.0.2，如何查看集群jar版本，通过spark history server随意进入一个application下，然后点击上方Environment，在该页面下有Classpath Entries，如下图&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_spark_hole_two/spark_guava_version.jpg&quot; alt=&quot;guava版本&quot; /&gt;&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;出现该冲突的原因是JVM加载jar，如果有多个版本的jar，默认会先使用spark集群内部的，JVM一旦加载后，就不会进行第二次加载，如果运用了高版本的jar的一些特性，也就会无法运行程序。&lt;/p&gt;

  &lt;hr /&gt;
&lt;/blockquote&gt;

&lt;p&gt;###解决方案&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;方案一：升级集群内部jar版本，且不说该方式不好评估升级jar后对集群带来的负面影响，该方式有些治标不治本吧，以后如果其他jar更新，集群每次都要更新jar版本，成本也太大了，不推荐使用&lt;/p&gt;

  &lt;p&gt;方案二：使用shade方式替换包，推荐该方式&lt;/p&gt;

  &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1）maven管理
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;  &lt;/div&gt;

  &lt;p&gt;修改pom.xml&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-java highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;org&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;apache&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;maven&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;groupId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artifactId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maven&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shade&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artifactId&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;3.2&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;kn&quot;&gt;package&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;phase&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;goals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shade&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;goal&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;goals&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relocations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;common&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;pattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shadedPattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;xxx&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;shaded&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;com&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;google&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;common&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;shadedPattern&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relocation&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;relocations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artifact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;*:*&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;artifact&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;excludes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                                        &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;META&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;INF&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;maven&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;/**&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;exclude&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                                    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;excludes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                                &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                            &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;filters&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                        &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;configuration&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;execution&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
                &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executions&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
            &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plugin&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;plugins&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;o&quot;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;blockquote&gt;
  &lt;p&gt;2) sbt管理&lt;/p&gt;

  &lt;p&gt;修改项目目录的project/plugins.sbt，如果没有该文件则创建该文件，添加assembly插件addSbtPlugin(&quot;com.eed3si9n&quot; % &quot;sbt-assembly&quot; % &quot;0.14.10&quot;)&lt;/p&gt;

  &lt;p&gt;修改build.sbt&lt;/p&gt;
&lt;/blockquote&gt;

&lt;div class=&quot;language-scala highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;assemblyShadeRules&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;assembly&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;:=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Seq&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nc&quot;&gt;ShadeRule&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rename&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;com.google.common&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;s&quot;&gt;&quot;com.xxx.shaded.com.google.common&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inAll&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;blockquote&gt;
  &lt;p&gt;assembly插件打的是个fat jar，需要注意的是maven方式打得fat jar是没办法完成包名替换的，还是会存在guava包冲突&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;本人使用的是maven方式，打完包后需要验证是否替换包名成功&lt;/p&gt;

  &lt;p&gt;下载个jd-gui工具验证，&lt;a href=&quot;http://java-decompiler.github.io/&quot;&gt;官方下载地址&lt;/a&gt;，下载完安装成功后打开，拖动jar包进入应用程序窗口内会自动打开jar包，包名未完成替换jar如下图
&lt;img src=&quot;/blog/blog_spark_hole_two/jar_origin.jpg&quot; alt=&quot;未替换图片&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;替换成功后的截图如下，可见com.google.common.base变成了com.feiniu.shaded.com.google.common包
&lt;img src=&quot;/blog/blog_spark_hole_two/jar_replace_success.jpg&quot; alt=&quot;替换成功图片&quot; /&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;hr /&gt;
&lt;blockquote&gt;
  &lt;p&gt;总结下，无论是自己项目中直接引入guava包，还是引用的第三方包用了guava包都可以完成替换，类推下，所以其他包与spark集群包冲突都可以通过shade化来解决&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>true</name></author><category term="Spark" /><category term="Sbt" /><category term="Maven" /><summary type="html">前不久提交了个任务到集群中，死活不通过，查看日志，发现guava包冲突。项目中用了个第三方包，该第三方包使用了guava包，版本是19.0。而spark集群内部也会使用guava包，集群用的是CDH的，spark版本2.3，但是我最后查到guava版本竟然是11.0.2，如何查看集群jar版本，通过spark history server随意进入一个application下，然后点击上方Environment，在该页面下有Classpath Entries，如下图</summary></entry><entry><title type="html">Spark踩坑记（一）</title><link href="http://localhost:4000/2020/03/29/spark_hole_one.html" rel="alternate" type="text/html" title="Spark踩坑记（一）" /><published>2020-03-29T21:01:29+08:00</published><updated>2020-03-29T21:01:29+08:00</updated><id>http://localhost:4000/2020/03/29/spark_hole_one</id><content type="html" xml:base="http://localhost:4000/2020/03/29/spark_hole_one.html">&lt;p&gt;在上周的项目中碰到了个坑吧&lt;/p&gt;
&lt;blockquote&gt;
  &lt;p&gt;spark streaming消费kafka数据存redis。kafka和redis都是自己公司内部封装过的，不能直接使用spark-redis连接内部的redis，没办法，只能老老实实的用自己公司提供的redis-client。每次流处理都要写redis，所以最好是只创建一个redis client，然后分发到所有excutor中。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;自己公司内部的redis-client中的类没有实现序列化，spark分发时需要序列化对象再传输。
如果类没有实现序列化，就会报错org.apache.spark.SparkException: Task not serializable。我觉得这个简单啊，然后就上百度搜了一下。CSDN上很多人转载文章，都是一样的解决方案，给类中成员变量加注解@transient，成员对象不参与序列化。我去试了，根本不行，还有一些解决方案，还有些说用spark broadcast，但是广播也是需要序列化的，还有说把scala方法改成scala函数，我真的无语了。&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;我研究了挺久吧，最终得以解决。&lt;strong&gt;&lt;u&gt;划重点，类中使用第三方成员变量未实现序列化且无法修改源码，使用伴生对象object创建该类的实例，类似单例模式，spark中使用object类中创建的对象，该方法无需序列化。scala中object类相当于java静态类，类中方法、属性皆为静态方法、属性。&lt;/u&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;blockquote&gt;
  &lt;p&gt;还有一个就是在executor中直接调用driver端创建的SparkContent对象也会报错，信息为Caused by: java.io.NotSerializableException: org.apache.spark.SparkContext，SparkContext对象也是不支持序列化的，如果需要使用，可以遍历RDD的使用使用rdd.sparkContext方法获得&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;接下来提供一下我对流处理中redis-client创建的见解吧。大致可以分为一下几种方法吧。&lt;/p&gt;

&lt;p&gt;####方法一&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;使用collect方法，将executor中的数据收集到driver端，再使用redis-client操作&lt;/p&gt;

  &lt;p&gt;优点：redis-client可以不用序列化，且只创建一个连接&lt;/p&gt;

  &lt;p&gt;缺点：所有数据都collect到driver端，会对driver造成压力，数据量过大还会直接OOM&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;####方法二&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;使用foreachPartition/foreach方法遍历流中的数据，在这里面new RedisClient操作，foreach遍历会每条数据都创建一个连接，性能更差，无需考虑&lt;/p&gt;

  &lt;p&gt;优点：redis-client无需实现序列化&lt;/p&gt;

  &lt;p&gt;缺点：会根据partition数量创建n个client，且均为短连接，partition数据太多的话会对redis集群造成压力&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;####方法三&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;executor使用driver创建的一个连接&lt;/p&gt;

  &lt;p&gt;优点：只有一个连接&lt;/p&gt;

  &lt;p&gt;缺点：client需要实现序列化&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;####方法四&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;即上述我使用的方法，采用伴生对象object创建类实例&lt;/p&gt;

  &lt;p&gt;优点：client无需序列化，应该只创建一个连接（未测试，应该是在driver端初始化该object，如果在每个executor JVM中创建的话，则创建的client数量会和executor数量一致，如果是的话，解决方案可以在driver端调用object中的方法强行初始化）&lt;/p&gt;

  &lt;p&gt;缺点：貌似没啥缺点，是除开可以序列化之外最完美的方案&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;可能会有人问，为什么不使用广播，广播会比直接在executor中使用性能好。&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;我测试过了，使用广播的话，会抛出ConcurrentModificationException的异常，这个java异常是多线程并发改一个对象产生的异常。这个异常可能是我司的redis-client才有也不一定，可以做尝试。&lt;/p&gt;
&lt;/blockquote&gt;</content><author><name>true</name></author><category term="Spark" /><category term="Spark Streaming" /><summary type="html">在上周的项目中碰到了个坑吧 spark streaming消费kafka数据存redis。kafka和redis都是自己公司内部封装过的，不能直接使用spark-redis连接内部的redis，没办法，只能老老实实的用自己公司提供的redis-client。每次流处理都要写redis，所以最好是只创建一个redis client，然后分发到所有excutor中。</summary></entry><entry><title type="html">大麦抢票</title><link href="http://localhost:4000/2019/12/23/damai_ticket.html" rel="alternate" type="text/html" title="大麦抢票" /><published>2019-12-23T22:05:21+08:00</published><updated>2019-12-23T22:05:21+08:00</updated><id>http://localhost:4000/2019/12/23/damai_ticket</id><content type="html" xml:base="http://localhost:4000/2019/12/23/damai_ticket.html">&lt;p&gt;废话不多说，大部分都是为了把妹才研究的！
如README里面写的，首先需要安装selenium，我使用的浏览器及环境如下&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;浏览器：谷歌
chromedriver下载地址：http://chromedriver.storage.googleapis.com/index.html
操作系统：Mac OS
解压后执行命令，perl -pi -e 's/cdc_/dog_/g' /Applications/chromedriver，/Applications/chromedriver为解压后的位置
上述命令并未在Windows上测试，可能Windows需要自己安装perl
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;写脚本时是用jupyter notebook编写的，方便调试代码，可能你还需要安装Anaconda，上百度搜索一个下载，然后安装，完成后在命令行输入jupyter notebook就可以打开浏览器一个编辑页面，左上角File中可以把代码文件GetTicket.ipynb加载进来，如下图
&lt;img src=&quot;/blog/blog_damai_ticket/notebook.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;整个抢票流程分为如下几个步骤：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 数据设置，大麦网账号上需要有身份证信息，默认地址信息之类
2. 账号密码登录
3. 搜索定位明星
4. 详情页需求选择
5. 下单页下单
6. 失败页面处理
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;抢票需要登录账号，而大麦网登录系统和淘宝是公用的一套登录系统，会识别selenium，干扰验证码认证，从而无法登录，使用selenium打开的浏览器，即使人工登录也会出现此问题，所以需要修改chromedriver的源码，使用perl修改会很方便，替换字符串cdc_为dog_，mac自带了perl命令，windows可能是需要自己安装的&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;perl -pi -e 's/cdc_/dog_/g' /Applications/chromedriver
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;注意登录的时候，有时会有验证码框，有时没有，所以需要自己判断是否出现验证码，及滑动滑块破解验证码，代码如下，滑动滑块验证码算是最简单的验证码之一&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nocaptcha-password&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;is_displayed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;c&quot;&gt;#滑动验证码,获取平移距离,移动解锁&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nc_1_n1z&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;inner_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;outer_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;find_element_by_class_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;nc-lang-cnt&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;width&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;move_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;outer_size&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;inner_size&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;ActionChains&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;browser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;drag_and_drop_by_offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;move_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;perform&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;time&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sleep&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;#滑完了之后稍等下，让系统判断完毕&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;着重讲解一下判断是否开售，如果没开售，则图片中【立即购买】的内容会是【即将开抢】，而开售后会是【立即购买】，票卖完后是【提交缺货登记】，我们需要根据这个框中的内容去判断程序需要做什么。票卖完时，就退出程序，当票还没开售时，就不停的刷新页面，开售后，程序就不停的下单直到下单成功。有时我们想买380块钱的票，结果卖完了，而又很想带小姐姐去看演唱会，那么可以在配置文件中配置auto_upgrade=True，该配置的意思是当该档位的票抢完了，则自动升级抢下一个档位的票，也就是图中680块钱的票
&lt;img src=&quot;/blog/blog_damai_ticket/buy.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;有时，已经进入下单页面了，点击【同意以上协议并提交订单】后，会弹出一个div框，框中内容是【亲，同一时间下单人数过多，建议您稍后再试】，点击框中的确认按钮，就会把用户踢到选择价位、购票数量的详情页，我用的解决办法是直接刷新浏览器，再操作一遍，然后点击同意，只要不弹框提示票不够，就一只刷，如果弹框提示票不够的话，也只能被踢到选择价位页重来。之前抢票时，光记着改代码，忘记截图保存，所以在此没办法展示&lt;/p&gt;

&lt;p&gt;需要注意的事项，&lt;strong&gt;有时明星过于火爆，每笔订单会限购2张票，需要对应两张身份证信息，需要提前在大麦网中输入好身份证信息&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;我用该脚本抢到过梁静茹的2020年2月14号情人节演唱会的票2张，但是奈何没有小姐姐啊，单子已经完成，就差付款后领小姐姐看演唱会&lt;/p&gt;

&lt;p&gt;代码还是有很多需要改进的地方，有实际应用才好改进，也就是bug复现&lt;/p&gt;

&lt;p&gt;完整代码参见&lt;a href=&quot;https://github.com/WhisperLoli/DaMai&quot;&gt;github&lt;/a&gt;&lt;/p&gt;</content><author><name>true</name></author><category term="python" /><category term="selenium" /><summary type="html">废话不多说，大部分都是为了把妹才研究的！ 如README里面写的，首先需要安装selenium，我使用的浏览器及环境如下</summary></entry><entry><title type="html">Spark SQL窗口函数使用</title><link href="http://localhost:4000/2019/11/07/spark-sql-window-function.html" rel="alternate" type="text/html" title="Spark SQL窗口函数使用" /><published>2019-11-07T20:36:49+08:00</published><updated>2019-11-07T20:36:49+08:00</updated><id>http://localhost:4000/2019/11/07/spark-sql-window-function</id><content type="html" xml:base="http://localhost:4000/2019/11/07/spark-sql-window-function.html">&lt;p&gt;数据集&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-csv&quot;&gt;year,class,student,score
2010,语文,A,84
2010,数学,A,59
2010,英语,A,30
2010,语文,B,44
2010,数学,B,76
2010,英语,B,68
2011,语文,A,51
2011,数学,A,94
2011,英语,A,71
2011,语文,B,87
2011,数学,B,44
2011,英语,B,40
2012,语文,A,91
2012,数学,A,50
2012,英语,A,81
2012,语文,B,81
2012,数学,B,84
2012,英语,B,98
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;问题一：每学年每门学科的第一名？&lt;/p&gt;

&lt;p&gt;问题二：每年总成绩都有提升的学生？&lt;/p&gt;

&lt;p&gt;如上两个问题使用普通SQL都不好解决，这时就该窗口函数登场了，第一个问题其实不通过窗口函数也可以解决，但会存在缺点，解法一通过SQL操作，解法二通过窗口函数，事先通过spark将数据集读入DataFrame，即为df，第二个问题则要复杂很多&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;问题一 

解法一
思路：根据成绩排序，高分排在前，低分在后，然后根据学年、学科两个字段去重，会去除掉同学年、
同学科成绩低于最高分的记录
缺点：如果有学科并列第一，也会被去掉一条记录，只保留一条记录
df.orderBy(desc(&quot;score&quot;))
  .dropDuplicates(&quot;year&quot;,&quot;class&quot;)
  .orderBy(&quot;year&quot;)
  .show()
      
解法二
思路：通过窗口函数获取每学年、每学科的最高成绩，创建新的一列，该列的值为当前学年、当前学科
的最高成绩，之后过滤出成绩与最高成绩相等的记录，该操作不会存在上面方法的缺点
df.withColumn(&quot;max&quot;, max(&quot;score&quot;).over(Window.partitionBy(&quot;year&quot;,&quot;class&quot;)))
  .filter($&quot;score&quot; === $&quot;max&quot;)
  .orderBy(&quot;year&quot;)
  .drop(&quot;max&quot;)
  .show()
      
问题二
思路：先通过窗口函数计算每学年每个学生的总成绩，然后只保留 学年、学生、总成绩 三列，筛选完
字段会有重复记录需要去重，之后通过窗口函数lag添加新的一列previous，该列的值为该学生去年的
总成绩，第一个学年的上一学年的总成绩为null，当上一学年的总成绩为null或者当前年的总成绩大于
上一学年的总成绩，对应新列flag相应的值置为1，否则置为0，最后通过窗口函数判断每一位学生的
flag列的平均值，如果平均值还是1，则该学生每年的总成绩都比上一年总成绩高
df.withColumn(&quot;sum&quot;, sum(&quot;score&quot;).over(Window.partitionBy(&quot;student&quot;,&quot;year&quot;)))
  .select(&quot;year&quot;,&quot;student&quot;, &quot;sum&quot;)
  .distinct()
  .withColumn(&quot;previous&quot;, lag(&quot;sum&quot;,1).over(Window.partitionBy(&quot;student&quot;).orderBy(&quot;student&quot;,&quot;year&quot;)))
  .withColumn(&quot;flag&quot;, when(($&quot;previous&quot;.isNull).or($&quot;sum&quot; &amp;gt; $&quot;previous&quot;),1).otherwise(0))
  .drop(&quot;sum&quot;, &quot;previous&quot;)
  .withColumn(&quot;avg&quot;, avg(&quot;flag&quot;).over(Window.partitionBy(&quot;student&quot;)))
  .filter($&quot;avg&quot; === 1)
  .dropDuplicates(&quot;student&quot;)
  .select(&quot;student&quot;)
  .show()

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>true</name></author><category term="Spark SQL" /><category term="SQL" /><category term="Spark" /><summary type="html">数据集</summary></entry><entry><title type="html">Mac本地编译chromedriver</title><link href="http://localhost:4000/2019/07/05/compile_chromedriver.html" rel="alternate" type="text/html" title="Mac本地编译chromedriver" /><published>2019-07-05T05:01:32+08:00</published><updated>2019-07-05T05:01:32+08:00</updated><id>http://localhost:4000/2019/07/05/compile_chromedriver</id><content type="html" xml:base="http://localhost:4000/2019/07/05/compile_chromedriver.html">&lt;p&gt;Mac OS本地编译chromedriver，参考&lt;a href=&quot;https://chromium.googlesource.com/chromium/src/+/master/docs/mac_build_instructions.md&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;chromedriver中自带的属性可以用来进行是否爬虫鉴定，所以被很多网站应用，这也是我为什么自己编译chromedriver的原因。耗费了自己很大的功夫，主要原因还是因为GFW的问题，大家都懂的。&lt;/p&gt;

&lt;p&gt;电脑即使浏览器配置了翻墙，终端也是不能翻墙的，所以要先配置终端翻墙，如果没有VPN的话，建议买一个吧，或者参考我之前的文章&lt;a href=&quot;https://whisperloli.github.io/2019/02/16/AWS_VPN.html&quot;&gt;AWS搭建VPN&lt;/a&gt;，因为接下来的工作在翻墙的基础上完成的&lt;/p&gt;

&lt;p&gt;配置终端翻墙&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi ~/.bash_profile

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;http_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:1087
&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;https_proxy&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;http://127.0.0.1:1087
&lt;span class=&quot;c&quot;&gt;# export all_proxy=socks5://127.0.0.1:1089&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#可以配置http_proxy和https_proxy，也可以配置所有的代理都用socks5，即上面注释掉的all_proxy，上面两种方式二选一即可&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;切换系统的默认python为python2，我的因为安装了Anaconda，所以默认的换成了python3，后面需要使用python2&lt;/p&gt;

&lt;p&gt;安装depot_tools工具&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git clone https://chromium.googlesource.com/chromium/tools/depot_tools.git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;配置depot_tools到环境变量中&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi ~/.bash_profile

&lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;PATH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$PATH&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;:/depot_tools_path/depot_tools&quot;&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;source&lt;/span&gt; ~/.bash_profile
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;配置git编码支持&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;git config --global core.precomposeUnicode true
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建一个目录用于获取chrome的源码&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;# 随便找个地方创建，当然得保证有读写权限
mkdir chromium &amp;amp;&amp;amp; cd chromium

#获取代码
fetch --no-history chromium
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;获取代码这一步差不多花了我5、6个小时吧，只要网络正常，一般不会出现什么问题，可以夜里面慢慢下载，我就是这样做的。最后下载完，看了一下文件夹大小，26个G左右，太大了，每次终端进入到这个文件夹下执行操作都会卡顿&lt;/p&gt;

&lt;p&gt;下载完成后会有个src目录，进入src目录&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;src
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;切换分支，chromedriver需要对应chrome浏览器版本，按自己的需要切换，大致相近即可&lt;/p&gt;

&lt;p&gt;同步工程相关代码&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gclient &lt;span class=&quot;nb&quot;&gt;sync&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--force&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上面这步同步代码完成后可能会报错
&lt;img src=&quot;/blog/blog_mac_compile_chromedriver/gclient_sysn_error.jpg&quot; alt=&quot;image&quot; /&gt;
红框中标出的内容说明代码同步完成，下面的错误可以不管它&lt;/p&gt;

&lt;p&gt;写配置信息到args.gn中&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vi args.gn

&lt;span class=&quot;nv&quot;&gt;is_debug&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;is_component_build&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;true
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;symbol_level&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;执行runhooks操作，这一步也是最容易出问题的一步，会出现各种莫名的问题&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gclient runhooks
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;错误记录及解决方案&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;错误：buildtools/mac/gn文件不存在&lt;/p&gt;

    &lt;p&gt;解决方案：&lt;a href=&quot;https://chrome-infra-packages.appspot.com/p/gn/gn/mac-amd64/+/git_revision:c4a88ac93e44a1950ecb4b490ef63dea6d2bf3d3&quot;&gt;gn下载网站&lt;/a&gt;，去网站上下载一个，放到需要的目录下，之后会在报错信息中告诉你，当前gn与需要的gn版本不一致，然后错误信息中会给出需要的版本的下载路径&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;错误：下载https://commondatastorage.googleapis.com/chromium-browser-clang/Mac/clang-363790-d874c057-3.tgz失败
&lt;img src=&quot;/blog/blog_mac_compile_chromedriver/download_failure.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

    &lt;p&gt;解决方案:这个问题也是因为GFW导致的，需要打开tools/clang/scripts/update.py，配置urlopen翻墙，也就是挂代理
 &lt;img src=&quot;/blog/blog_mac_compile_chromedriver/add_proxy.jpg&quot; alt=&quot;image&quot; /&gt;
 红框中的内容是我自己加进去的&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; import urllib2      		
 &lt;span class=&quot;nv&quot;&gt;proxies&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;urllib2.ProxyHandler&lt;span class=&quot;o&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'https'&lt;/span&gt;:&lt;span class=&quot;s1&quot;&gt;'127.0.0.1:1087'&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;})&lt;/span&gt;
 &lt;span class=&quot;nv&quot;&gt;opener&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;urllib2.build_opener&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;proxies&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
 urllib2.install_opener&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;opener&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;如果还是不行的话可能是网络不好，多试几遍&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;错误：找不到.cipd_bin/vpython文件
 解决方案: 在终端执行update_depot_tools命令，如果执行该命令报错&lt;/p&gt;
    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; curl: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;35&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; error:1400410B:SSL routines:CONNECT_CR_SRVR_HELLO:wrong version number
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
    &lt;p&gt;这是因为网络不好的原因，网络好的话，秒级时间就OK&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;之后runhooks就没什么错误了，一路通畅&lt;/p&gt;

&lt;p&gt;上述结束后可以看到提示：Running hooks: 100% (75/75), done.
那么执行下面的命令吧&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gn gen out/Release
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;可能会出现如下的错误
&lt;img src=&quot;/blog/blog_mac_compile_chromedriver/xcode_error.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;这个是因为电脑中没有安装Xcode的缘故，赶紧去AppStore下一个，Xcode也挺大的，几个G的大小，下载完成后安装，然后按照错误中的提示执行命令&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;#最后的是Xcode.app安装的路径，如果不在/Applications下面，可以用find命令查找一下&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;xcode-select &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; /Applications/Xcode.app
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;马上就要大功告成了，激动吧&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ninja &lt;span class=&quot;nt&quot;&gt;-C&lt;/span&gt; out/Release chromedriver
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;最后一步差不多十来分钟，可以去喝个茶，休息会，等待执行完成后，进入out/Release目录下面就可以看到chromedriver了，如果你也是想用于爬虫的话，记得修改源码的识别码哦，我已经改了，在本博文中没写进去。最后，说一句Fucking GFW，因为浪费我时间最久的就是这个&lt;/p&gt;</content><author><name>true</name></author><category term="Mac" /><category term="chromedriver" /><summary type="html">Mac OS本地编译chromedriver，参考官方文档</summary></entry><entry><title type="html">Hive分区表导入ElasticSearch</title><link href="http://localhost:4000/2019/05/08/hive_partition_table_into_es.html" rel="alternate" type="text/html" title="Hive分区表导入ElasticSearch" /><published>2019-05-08T22:25:19+08:00</published><updated>2019-05-08T22:25:19+08:00</updated><id>http://localhost:4000/2019/05/08/hive_partition_table_into_es</id><content type="html" xml:base="http://localhost:4000/2019/05/08/hive_partition_table_into_es.html">&lt;p&gt;工作中总会碰到Hive数据导入ElasticSearch，可以写Spark程序读Hive表，再写入ES中。同样，ElasticSearch官方也提供了一个工具，elasticsearch-hadoop.jar工具包，在hive程序中引入该包，就可以创建表与ES相关联，向该表中导入数据，数据就会存入ES中。&lt;/p&gt;

&lt;p&gt;hive分区表导入ES时，我们希望一次性导入就会在insert表时不加where条件，在实际使用过程中，碰到了一个问题，程序报错，信息如下，查了很久，网上关于这方面的资料很少，最终在elasticsearch-hadoop的项目issue中发现有人提了这个问题，说不是jar的问题，是parquet格式的问题&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ERROR &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;IPC Server handler 1 on 60702] org.apache.hadoop.mapred.TaskAttemptListenerImpl: Task: attempt_1556068676896_1760_m_000000_0 - exited : java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.hadoop.hive.io.HiveIOExceptionHandlerChain.handleRecordReaderCreationException&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HiveIOExceptionHandlerChain.java:97&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.io.HiveIOExceptionHandlerUtil.handleRecordReaderCreationException&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HiveIOExceptionHandlerUtil.java:57&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.shims.HadoopShimsSecure&lt;span class=&quot;nv&quot;&gt;$CombineFileRecordReader&lt;/span&gt;.initNextRecordReader&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HadoopShimsSecure.java:267&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.shims.HadoopShimsSecure&lt;span class=&quot;nv&quot;&gt;$CombineFileRecordReader&lt;/span&gt;.next&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HadoopShimsSecure.java:140&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.MapTask&lt;span class=&quot;nv&quot;&gt;$TrackedRecordReader&lt;/span&gt;.moveToNext&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MapTask.java:199&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.MapTask&lt;span class=&quot;nv&quot;&gt;$TrackedRecordReader&lt;/span&gt;.next&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MapTask.java:185&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.MapRunner.run&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MapRunner.java:52&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.MapTask.runOldMapper&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MapTask.java:459&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.MapTask.run&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MapTask.java:343&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.YarnChild&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;.run&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;YarnChild.java:164&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at java.security.AccessController.doPrivileged&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Native Method&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at javax.security.auth.Subject.doAs&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Subject.java:422&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.security.UserGroupInformation.doAs&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;UserGroupInformation.java:1920&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.YarnChild.main&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;YarnChild.java:158&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Native Method&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NativeConstructorAccessorImpl.java:62&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DelegatingConstructorAccessorImpl.java:45&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at java.lang.reflect.Constructor.newInstance&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Constructor.java:423&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.shims.HadoopShimsSecure&lt;span class=&quot;nv&quot;&gt;$CombineFileRecordReader&lt;/span&gt;.initNextRecordReader&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HadoopShimsSecure.java:253&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	... 11 more
Caused by: java.lang.IndexOutOfBoundsException: Index: 10, Size: 10
	at java.util.ArrayList.rangeCheck&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ArrayList.java:657&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at java.util.ArrayList.get&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ArrayList.java:433&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.read.DataWritableReadSupport.getProjectedGroupFields&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DataWritableReadSupport.java:116&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.read.DataWritableReadSupport.getSchemaByName&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DataWritableReadSupport.java:176&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.read.DataWritableReadSupport.init&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DataWritableReadSupport.java:242&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.read.ParquetRecordReaderWrapper.getSplit&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ParquetRecordReaderWrapper.java:256&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.read.ParquetRecordReaderWrapper.&amp;lt;init&amp;gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ParquetRecordReaderWrapper.java:95&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.read.ParquetRecordReaderWrapper.&amp;lt;init&amp;gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ParquetRecordReaderWrapper.java:81&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat.getRecordReader&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MapredParquetInputFormat.java:72&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.CombineHiveRecordReader.&amp;lt;init&amp;gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;CombineHiveRecordReader.java:68&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	... 16 more
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;既然导致这个错误的原因是源数据表是parquet格式，所以我们要创建张临时表，存储格式为orc格式，用于存储源表的数据，或者一开始，我们导入hive时就用orc格式&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elasticsearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hadoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;es_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;es_id&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;姓名&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;gender&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;性别&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;年龄&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;birth_year&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;出生年份&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;STORED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'org.elasticsearch.hadoop.hive.EsStorageHandler'&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TBLPROPERTIES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	        &lt;span class=&quot;s1&quot;&gt;'es.resource'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'student/info'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	        &lt;span class=&quot;s1&quot;&gt;'es.mapping.id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'es_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	        &lt;span class=&quot;s1&quot;&gt;'es.index.auto.create'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'true'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	        &lt;span class=&quot;s1&quot;&gt;'es.mapping.routing'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'es_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	        &lt;span class=&quot;s1&quot;&gt;'es.nodes'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'127.0.0.1:9200'&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;student_tmp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	 &lt;span class=&quot;n&quot;&gt;es_id&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;姓名&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;gender&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;性别&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;年龄&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PATITIONED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;birth_year&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STORED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;设置动态分区&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;dynamic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonstrict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVERWRITE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;student_tmp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;birth_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;student&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVERWRITE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;es_table&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;student_tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;完成后，再将临时表drop掉，完美！如果想做成定时任务的话，可以用beeline执行hive sql，官方也不建议使用hive cli了，推荐使用beeline。&lt;/p&gt;</content><author><name>true</name></author><category term="Hive" /><category term="elasticsearch" /><summary type="html">工作中总会碰到Hive数据导入ElasticSearch，可以写Spark程序读Hive表，再写入ES中。同样，ElasticSearch官方也提供了一个工具，elasticsearch-hadoop.jar工具包，在hive程序中引入该包，就可以创建表与ES相关联，向该表中导入数据，数据就会存入ES中。</summary></entry><entry><title type="html">版本管理工具之SVN与Git</title><link href="http://localhost:4000/2019/05/06/svn_git.html" rel="alternate" type="text/html" title="版本管理工具之SVN与Git" /><published>2019-05-06T21:36:49+08:00</published><updated>2019-05-06T21:36:49+08:00</updated><id>http://localhost:4000/2019/05/06/svn_git</id><content type="html" xml:base="http://localhost:4000/2019/05/06/svn_git.html">&lt;p&gt;之前在公司版本管理工具一直用的是Git，习惯于Git命令行操作，最近换了家公司，发现竟然用的是SVN。在Windows系统上，可以用&lt;a href=&quot;https://tortoisesvn.net/downloads.html&quot;&gt;小乌龟&lt;/a&gt;这个工具。我一直习惯用Mac办公，Mac上也有图形界面工具，例如SmartSVN，但是是收费软件。Mac有个好处就是自带了SVN客户端，可以在命令行中直接使用。&lt;/p&gt;

&lt;p&gt;拉取远程代码到本地&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn checkout svn://localhost/mycode &lt;span class=&quot;nt&quot;&gt;--username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mj &lt;span class=&quot;nt&quot;&gt;--password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;123 /Users/admin/Documents/code         &lt;span class=&quot;c&quot;&gt;#svn操作&lt;/span&gt;

git clone git@github.com:WhisperLoli/bank.git    &lt;span class=&quot;c&quot;&gt;#git操作，也可以为http地址&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;新增的文件添加到SVN版本管理&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn add a.txt &lt;span class=&quot;c&quot;&gt;#svn操作&lt;/span&gt;
git add a.txt &lt;span class=&quot;c&quot;&gt;#git操作&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;svn修改的文件不需要使用add，修改完可以直接commit，提交修改&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;commit message&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# svn操作&lt;/span&gt;

git add a.txt      &lt;span class=&quot;c&quot;&gt;#a.txt文件发生修改后，需要add到暂存区&lt;/span&gt;
git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;commit message&quot;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 提交commit到本地仓库&lt;/span&gt;
git push &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;origin] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;master]  &lt;span class=&quot;c&quot;&gt;# 推送本地仓库的commit到远程，origin为远程仓库名称，master为远程分支名称，默认为origin和master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;更新服务器端代码到本地&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn update   &lt;span class=&quot;c&quot;&gt;# svn更新本地&lt;/span&gt;

git pull     &lt;span class=&quot;c&quot;&gt;# git更新本地&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看当前状态&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn status    &lt;span class=&quot;c&quot;&gt;# svn查看状态&lt;/span&gt;

git status    &lt;span class=&quot;c&quot;&gt;# git查看状态&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;合并分支A的代码到分支B&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn merge svn://localhost/code/A /Users/admin/Documents/code/B  &lt;span class=&quot;c&quot;&gt;#合并远程分支A到本地B分支&lt;/span&gt;
svn merge /Users/admin/Documents/code/A svn://localhost/code/B &lt;span class=&quot;c&quot;&gt;#合并本地分支A到远程B分支&lt;/span&gt;
svn commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;commit message&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#提交到服务器&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#git的两种合并分支方式&lt;/span&gt;
git checkout B &lt;span class=&quot;c&quot;&gt;#切换到分支B&lt;/span&gt;
git merge A &lt;span class=&quot;c&quot;&gt;#合并分支A的信息&lt;/span&gt;

git checkout A &lt;span class=&quot;c&quot;&gt;#切换到分支A&lt;/span&gt;
git rebase B  &lt;span class=&quot;c&quot;&gt;#将分支A的commit在分支B上重演一遍&lt;/span&gt;
git checkout B &lt;span class=&quot;c&quot;&gt;#切换回分支A&lt;/span&gt;

git push &lt;span class=&quot;c&quot;&gt;#提交到服务器&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;恢复修改的文件，修改a.txt，想要撤销修改&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn revert a.txt  &lt;span class=&quot;c&quot;&gt;# 恢复修改&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 当a.txt在工作区时&lt;/span&gt;
git checkout a.txt

&lt;span class=&quot;c&quot;&gt;# 当a.txt添加到暂存区后&lt;/span&gt;
git reset HEAD a.txt &lt;span class=&quot;c&quot;&gt;# 从暂存区取消&lt;/span&gt;
git checkout a.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建分支&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn copy svn://localhost/code/SVNTest svn://localhost/code/branch/new_branch &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'aa的分支'&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#然后拉取到本地&lt;/span&gt;

git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; aa  &lt;span class=&quot;c&quot;&gt;#创建分支aa，并切换到aa&lt;/span&gt;
git branch aa  &lt;span class=&quot;c&quot;&gt;#先创建分支aa&lt;/span&gt;
git checkout aa  &lt;span class=&quot;c&quot;&gt;#切换到分支aa&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;比较文件做了哪些修改&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn diff a.txt &lt;span class=&quot;c&quot;&gt;#svn操作&lt;/span&gt;

git diff a.txt &lt;span class=&quot;c&quot;&gt;#git操作&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;总结了一些基本的操作，使用上面我感觉最大的不同就是git操作是针对每次commit，而svn不同，svn可以切换到任意目录下，只更新小部分的文件，merge也可以只针对某个特定的文件夹merge，而不是对commit做merge&lt;/p&gt;</content><author><name>true</name></author><category term="版本管理工具" /><category term="SVN" /><category term="Git" /><summary type="html">之前在公司版本管理工具一直用的是Git，习惯于Git命令行操作，最近换了家公司，发现竟然用的是SVN。在Windows系统上，可以用小乌龟这个工具。我一直习惯用Mac办公，Mac上也有图形界面工具，例如SmartSVN，但是是收费软件。Mac有个好处就是自带了SVN客户端，可以在命令行中直接使用。</summary></entry><entry><title type="html">MySQL行列转换</title><link href="http://localhost:4000/2019/03/20/sql_row_column_conversion.html" rel="alternate" type="text/html" title="MySQL行列转换" /><published>2019-03-20T16:33:12+08:00</published><updated>2019-03-20T16:33:12+08:00</updated><id>http://localhost:4000/2019/03/20/sql_row_column_conversion</id><content type="html" xml:base="http://localhost:4000/2019/03/20/sql_row_column_conversion.html">&lt;p&gt;先创建表&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`grade`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`course`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`score`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InnoDB&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARSET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;插入数据&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`grade`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`course`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`score`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'张三'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'语文'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;76&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`grade`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`course`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`score`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'李四'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'语文'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;76&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`grade`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`course`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`score`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'李四'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'数学'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`grade`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`course`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`score`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'张三'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'数学'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;列转行&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;course&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;数学&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;数学&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;course&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;语文&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;语文&quot;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grade&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_sql_row_column_conversion/column_to_row.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;创建另一张表及插入数据&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/*建表*/&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_grade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;`math`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;`chinese`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InnoDB&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARSET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*将列转行的结果作为新的结果插入表中*/&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_grade&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;course&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;数学&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;数学&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;course&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;语文&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;语文&quot;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grade&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;行转列&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* database名字为test */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'语文'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`subject`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chinese&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_grade&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'数学'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`subject`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_grade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_sql_row_column_conversion/row_to_column.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;</content><author><name>true</name></author><category term="SQL" /><category term="MySQL" /><summary type="html">先创建表</summary></entry><entry><title type="html">AWS搭建VPN</title><link href="http://localhost:4000/2019/02/16/AWS_VPN.html" rel="alternate" type="text/html" title="AWS搭建VPN" /><published>2019-02-16T23:37:24+08:00</published><updated>2019-02-16T23:37:24+08:00</updated><id>http://localhost:4000/2019/02/16/AWS_VPN</id><content type="html" xml:base="http://localhost:4000/2019/02/16/AWS_VPN.html">&lt;p&gt;之前一直用的是搬瓦工的VPS，现在搬瓦工只支持KVM模式，所以价格上去了，我的搬瓦工也到期了，听说AWS首年免费使用，所以尝试一下，注册了一个账号，英文不好的童鞋可以把语言切换成中文。&lt;/p&gt;

&lt;p&gt;首先要注册一个账号，注册的时候要求填电话号码，不要乱填，因为需要验证手机号码的，还需要绑定一张信用卡，信用要支持Visa的，要全币种的信用卡。AWS会进行信用卡验证，扣1$验证信用卡是否有效，说是会退的，后面我还被扣了1$的押金，招行微信公众号发消息告诉我消费了，后来我又打电话给招行客服，客服说我信用卡账单没查到这两笔交易，以账单为准，哈哈&lt;/p&gt;

&lt;p&gt;先选择机器所在地区，我选择的是东京，截图右上角
&lt;img src=&quot;/blog/blog_aws_vpn/area.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;创建EC2实例,点击图中的launch instance创建实例
&lt;img src=&quot;/blog/blog_aws_vpn/launch.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择带Free tier eligible的机器，这里选的是Ubuntu Server 18.04 LTS这款
&lt;img src=&quot;/blog/blog_aws_vpn/free_machine.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;进来之后还是选择带Free tier eligible的机器，配置不高，但是搭建VPN还是可以的
&lt;img src=&quot;/blog/blog_aws_vpn/review_launch.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在之后的页面中点击Launch按钮，会弹出这个框，需要设置密钥对，设置完后下载密钥对，之后再Launch Instances，密钥对在后面会用于登陆服务器，
&lt;img src=&quot;/blog/blog_aws_vpn/key_pair.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;先启动实例后再连接实例
&lt;img src=&quot;/blog/blog_aws_vpn/connect.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;会弹出连接方式，教你怎么连接上你创建的实例，先给下载的密钥对文件授权，然后用ssh方式登录服务器
&lt;img src=&quot;/blog/blog_aws_vpn/ssh_connect.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此，实例创建完成&lt;/p&gt;

&lt;p&gt;登录服务器，用Shadowsocks搭建VPN&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; //获取root权限
apt-get update //更新apt-get
apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python-pip //安装pip工具，用于安装shadowsocks
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;shadowsocks //安装shadowsocks
vim ~/shadowsocks_conf.json //编辑shadowsocks配置

&lt;span class=&quot;c&quot;&gt;#json文件内容为如下&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;server&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;0.0.0.0&quot;&lt;/span&gt;, 
    &lt;span class=&quot;s2&quot;&gt;&quot;server_port&quot;&lt;/span&gt;: 443, &lt;span class=&quot;c&quot;&gt;#vpn端口号&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;qwertyuiop&quot;&lt;/span&gt;, &lt;span class=&quot;c&quot;&gt;#连接密码&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;local_address&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;local_port&quot;&lt;/span&gt;:1080,
    &lt;span class=&quot;s2&quot;&gt;&quot;timeout&quot;&lt;/span&gt;:600,
    &lt;span class=&quot;s2&quot;&gt;&quot;method&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;aes-256-cfb&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;fast_open&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


ssserver &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; ~/shadowsocks_conf.json &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; start //启动shadowsocks

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;编辑EC2入站规则，还是再控制台页面，下面是有滚动条的，滑到最右边就能看见了
&lt;img src=&quot;/blog/blog_aws_vpn/security_groups.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_aws_vpn/edit.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;自定义入站规则，把刚刚在json配置文件中的端口给加上去，我用的是443，再加个22端口，ssh默认使用的是22端口，如果修改过，则换为修改后的端口
&lt;img src=&quot;/blog/blog_aws_vpn/custom_rule.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此搭建工作完成&lt;/p&gt;

&lt;p&gt;本人的是Mac版的，分享一个&lt;a href=&quot;链接:https://pan.baidu.com/s/1Ut0M8bMxCPnr1xoOHOxZig&quot;&gt;百度云链接&lt;/a&gt;，密码:2v7x，两个版本的客户端，任意下载一个即可，使用&lt;a href=&quot;https://github.com/shadowsocks/ShadowsocksX-NG/releases&quot;&gt;GitHub下载地址&lt;/a&gt;下载也可以&lt;/p&gt;

&lt;p&gt;安装完后，在 服务器-&amp;gt;服务器设定，填写配置信息，配置信息在刚刚的json文件中配置了，地址不要使用ifconfig显示的IP，在控制台页面中查看公网IP，还是在下方把滚动条向右滑
&lt;img src=&quot;/blog/blog_aws_vpn/ss_connect.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_aws_vpn/public_ip.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;大功告成，不要干坏事噢&lt;/p&gt;

&lt;p&gt;为了方便以后登录服务器，建议把ssh public key添加到服务器上&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 本地操作&lt;/span&gt;
ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa &lt;span class=&quot;c&quot;&gt;#生成ssh key，使用rsa加密方式，输入密码时可以回车，不设置密码&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.ssh
&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;id_rsa.pub &lt;span class=&quot;c&quot;&gt;#该文件中的内容就是ssh public key，把该文件中的内容拷贝&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#服务器端操作&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.ssh
&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;authorized_keys &lt;span class=&quot;c&quot;&gt;#如果没有authorized_keys文件&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#再把刚copy的public key添加到authorized_keys文件中，之后就可以使用ssh user@ip 的方式连接上服务器&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>true</name></author><category term="VPS" /><category term="Linux" /><category term="VPN" /><summary type="html">之前一直用的是搬瓦工的VPS，现在搬瓦工只支持KVM模式，所以价格上去了，我的搬瓦工也到期了，听说AWS首年免费使用，所以尝试一下，注册了一个账号，英文不好的童鞋可以把语言切换成中文。</summary></entry></feed>