<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.8.1">Jekyll</generator><link href="http://localhost:4000/feed.xml" rel="self" type="application/atom+xml" /><link href="http://localhost:4000/" rel="alternate" type="text/html" /><updated>2019-05-08T23:25:21+08:00</updated><id>http://localhost:4000/</id><title type="html">Loli</title><subtitle>For dream</subtitle><author><name>true</name></author><entry><title type="html">Hive分区表导入ElasticSearch</title><link href="http://localhost:4000/2019/05/08/hive_partition_table_into_es.html" rel="alternate" type="text/html" title="Hive分区表导入ElasticSearch" /><published>2019-05-08T22:25:19+08:00</published><updated>2019-05-08T22:25:19+08:00</updated><id>http://localhost:4000/2019/05/08/hive_partition_table_into_es</id><content type="html" xml:base="http://localhost:4000/2019/05/08/hive_partition_table_into_es.html">&lt;p&gt;工作中总会碰到Hive数据导入ElasticSearch，可以写Spark程序读Hive表，再写入ES中。同样，ElasticSearch官方也提供了一个工具，elasticsearch-hadoop.jar工具包，在hive程序中引入该包，就可以创建表与ES相关联，向该表中导入数据，数据就会存入ES中。&lt;/p&gt;

&lt;p&gt;hive分区表导入ES时，我们希望一次性导入就会在insert表时不加where条件，在实际使用过程中，碰到了一个问题，程序报错，信息如下，查了很久，网上关于这方面的资料很少，最终在elasticsearch-hadoop的项目issue中发现有人提了这个问题，说不是jar的问题，是parquet格式的问题&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt; ERROR &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;IPC Server handler 1 on 60702] org.apache.hadoop.mapred.TaskAttemptListenerImpl: Task: attempt_1556068676896_1760_m_000000_0 - exited : java.io.IOException: java.lang.reflect.InvocationTargetException
	at org.apache.hadoop.hive.io.HiveIOExceptionHandlerChain.handleRecordReaderCreationException&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HiveIOExceptionHandlerChain.java:97&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.io.HiveIOExceptionHandlerUtil.handleRecordReaderCreationException&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HiveIOExceptionHandlerUtil.java:57&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.shims.HadoopShimsSecure&lt;span class=&quot;nv&quot;&gt;$CombineFileRecordReader&lt;/span&gt;.initNextRecordReader&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HadoopShimsSecure.java:267&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.shims.HadoopShimsSecure&lt;span class=&quot;nv&quot;&gt;$CombineFileRecordReader&lt;/span&gt;.next&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HadoopShimsSecure.java:140&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.MapTask&lt;span class=&quot;nv&quot;&gt;$TrackedRecordReader&lt;/span&gt;.moveToNext&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MapTask.java:199&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.MapTask&lt;span class=&quot;nv&quot;&gt;$TrackedRecordReader&lt;/span&gt;.next&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MapTask.java:185&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.MapRunner.run&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MapRunner.java:52&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.MapTask.runOldMapper&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MapTask.java:459&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.MapTask.run&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MapTask.java:343&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.YarnChild&lt;span class=&quot;nv&quot;&gt;$2&lt;/span&gt;.run&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;YarnChild.java:164&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at java.security.AccessController.doPrivileged&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Native Method&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at javax.security.auth.Subject.doAs&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Subject.java:422&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.security.UserGroupInformation.doAs&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;UserGroupInformation.java:1920&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.mapred.YarnChild.main&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;YarnChild.java:158&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Caused by: java.lang.reflect.InvocationTargetException
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Native Method&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at sun.reflect.NativeConstructorAccessorImpl.newInstance&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NativeConstructorAccessorImpl.java:62&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DelegatingConstructorAccessorImpl.java:45&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at java.lang.reflect.Constructor.newInstance&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Constructor.java:423&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.shims.HadoopShimsSecure&lt;span class=&quot;nv&quot;&gt;$CombineFileRecordReader&lt;/span&gt;.initNextRecordReader&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;HadoopShimsSecure.java:253&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	... 11 more
Caused by: java.lang.IndexOutOfBoundsException: Index: 10, Size: 10
	at java.util.ArrayList.rangeCheck&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ArrayList.java:657&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at java.util.ArrayList.get&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ArrayList.java:433&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.read.DataWritableReadSupport.getProjectedGroupFields&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DataWritableReadSupport.java:116&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.read.DataWritableReadSupport.getSchemaByName&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DataWritableReadSupport.java:176&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.read.DataWritableReadSupport.init&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DataWritableReadSupport.java:242&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.read.ParquetRecordReaderWrapper.getSplit&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ParquetRecordReaderWrapper.java:256&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.read.ParquetRecordReaderWrapper.&amp;lt;init&amp;gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ParquetRecordReaderWrapper.java:95&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.read.ParquetRecordReaderWrapper.&amp;lt;init&amp;gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ParquetRecordReaderWrapper.java:81&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.parquet.MapredParquetInputFormat.getRecordReader&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;MapredParquetInputFormat.java:72&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	at org.apache.hadoop.hive.ql.io.CombineHiveRecordReader.&amp;lt;init&amp;gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;CombineHiveRecordReader.java:68&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	... 16 more
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;既然导致这个错误的原因是源数据表是parquet格式，所以我们要创建张临时表，存储格式为orc格式，用于存储源表的数据，或者一开始，我们导入hive时就用orc格式&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;add&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;elasticsearch&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;hadoop&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;jar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;USE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;es_table&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;es_id&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;姓名&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;gender&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;性别&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;年龄&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;birth_year&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;出生年份&quot;&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;STORED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'org.elasticsearch.hadoop.hive.EsStorageHandler'&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;TBLPROPERTIES&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	        &lt;span class=&quot;s1&quot;&gt;'es.resource'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'student/info'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	        &lt;span class=&quot;s1&quot;&gt;'es.mapping.id'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'es_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	        &lt;span class=&quot;s1&quot;&gt;'es.index.auto.create'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'true'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	        &lt;span class=&quot;s1&quot;&gt;'es.mapping.routing'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'es_id'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	        &lt;span class=&quot;s1&quot;&gt;'es.nodes'&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'127.0.0.1:9200'&lt;/span&gt;
        &lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;student_tmp&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	 &lt;span class=&quot;n&quot;&gt;es_id&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;id&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;string&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;姓名&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;gender&lt;/span&gt;  &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;性别&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;age&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;COMMENT&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;年龄&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PATITIONED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;BY&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;birth_year&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;STORED&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;AS&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;orc&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;#&lt;/span&gt; &lt;span class=&quot;err&quot;&gt;设置动态分区&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;SET&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;dynamic&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;partition&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;mode&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonstrict&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVERWRITE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;student_tmp&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;PARTITION&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;birth_year&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;student&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;OVERWRITE&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;es_table&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;SELECT&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;FROM&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;student_tmp&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;完成后，再将临时表drop掉，完美！如果想做成定时任务的话，可以用beeline执行hive sql，官方也不建议使用hive cli了，推荐使用beeline。&lt;/p&gt;</content><author><name>true</name></author><category term="Hive" /><category term="elasticsearch" /><summary type="html">工作中总会碰到Hive数据导入ElasticSearch，可以写Spark程序读Hive表，再写入ES中。同样，ElasticSearch官方也提供了一个工具，elasticsearch-hadoop.jar工具包，在hive程序中引入该包，就可以创建表与ES相关联，向该表中导入数据，数据就会存入ES中。</summary></entry><entry><title type="html">版本管理工具之SVN与Git</title><link href="http://localhost:4000/2019/05/06/svn_git.html" rel="alternate" type="text/html" title="版本管理工具之SVN与Git" /><published>2019-05-06T21:36:49+08:00</published><updated>2019-05-06T21:36:49+08:00</updated><id>http://localhost:4000/2019/05/06/svn_git</id><content type="html" xml:base="http://localhost:4000/2019/05/06/svn_git.html">&lt;p&gt;之前在公司版本管理工具一直用的是Git，习惯于Git命令行操作，最近换了家公司，发现竟然用的是SVN。在Windows系统上，可以用&lt;a href=&quot;https://tortoisesvn.net/downloads.html&quot;&gt;小乌龟&lt;/a&gt;这个工具。我一直习惯用Mac办公，Mac上也有图形界面工具，例如SmartSVN，但是是收费软件。Mac有个好处就是自带了SVN客户端，可以在命令行中直接使用。&lt;/p&gt;

&lt;p&gt;拉取远程代码到本地&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn checkout svn://localhost/mycode &lt;span class=&quot;nt&quot;&gt;--username&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mj &lt;span class=&quot;nt&quot;&gt;--password&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;123 /Users/admin/Documents/code         &lt;span class=&quot;c&quot;&gt;#svn操作&lt;/span&gt;

git clone git@github.com:WhisperLoli/bank.git    &lt;span class=&quot;c&quot;&gt;#git操作，也可以为http地址&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;新增的文件添加到SVN版本管理&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn add a.txt &lt;span class=&quot;c&quot;&gt;#svn操作&lt;/span&gt;
git add a.txt &lt;span class=&quot;c&quot;&gt;#git操作&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;svn修改的文件不需要使用add，修改完可以直接commit，提交修改&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;commit message&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;# svn操作&lt;/span&gt;

git add a.txt      &lt;span class=&quot;c&quot;&gt;#a.txt文件发生修改后，需要add到暂存区&lt;/span&gt;
git commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;commit message&quot;&lt;/span&gt;  &lt;span class=&quot;c&quot;&gt;# 提交commit到本地仓库&lt;/span&gt;
git push &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;origin] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;master]  &lt;span class=&quot;c&quot;&gt;# 推送本地仓库的commit到远程，origin为远程仓库名称，master为远程分支名称，默认为origin和master&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;更新服务器端代码到本地&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn update   &lt;span class=&quot;c&quot;&gt;# svn更新本地&lt;/span&gt;

git pull     &lt;span class=&quot;c&quot;&gt;# git更新本地&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看当前状态&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn status    &lt;span class=&quot;c&quot;&gt;# svn查看状态&lt;/span&gt;

git status    &lt;span class=&quot;c&quot;&gt;# git查看状态&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;合并分支A的代码到分支B&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn merge svn://localhost/code/A /Users/admin/Documents/code/B  &lt;span class=&quot;c&quot;&gt;#合并远程分支A到本地B分支&lt;/span&gt;
svn merge /Users/admin/Documents/code/A svn://localhost/code/B &lt;span class=&quot;c&quot;&gt;#合并本地分支A到远程B分支&lt;/span&gt;
svn commit &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;commit message&quot;&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#提交到服务器&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#git的两种合并分支方式&lt;/span&gt;
git checkout B &lt;span class=&quot;c&quot;&gt;#切换到分支B&lt;/span&gt;
git merge A &lt;span class=&quot;c&quot;&gt;#合并分支A的信息&lt;/span&gt;

git checkout A &lt;span class=&quot;c&quot;&gt;#切换到分支A&lt;/span&gt;
git rebase B  &lt;span class=&quot;c&quot;&gt;#将分支A的commit在分支B上重演一遍&lt;/span&gt;
git checkout B &lt;span class=&quot;c&quot;&gt;#切换回分支A&lt;/span&gt;

git push &lt;span class=&quot;c&quot;&gt;#提交到服务器&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;恢复修改的文件，修改a.txt，想要撤销修改&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn revert a.txt  &lt;span class=&quot;c&quot;&gt;# 恢复修改&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;# 当a.txt在工作区时&lt;/span&gt;
git checkout a.txt

&lt;span class=&quot;c&quot;&gt;# 当a.txt添加到暂存区后&lt;/span&gt;
git reset HEAD a.txt &lt;span class=&quot;c&quot;&gt;# 从暂存区取消&lt;/span&gt;
git checkout a.txt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建分支&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn copy svn://localhost/code/SVNTest svn://localhost/code/branch/new_branch &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'aa的分支'&lt;/span&gt; &lt;span class=&quot;c&quot;&gt;#然后拉取到本地&lt;/span&gt;

git checkout &lt;span class=&quot;nt&quot;&gt;-b&lt;/span&gt; aa  &lt;span class=&quot;c&quot;&gt;#创建分支aa，并切换到aa&lt;/span&gt;
git branch aa  &lt;span class=&quot;c&quot;&gt;#先创建分支aa&lt;/span&gt;
git checkout aa  &lt;span class=&quot;c&quot;&gt;#切换到分支aa&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;比较文件做了哪些修改&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;svn diff a.txt &lt;span class=&quot;c&quot;&gt;#svn操作&lt;/span&gt;

git diff a.txt &lt;span class=&quot;c&quot;&gt;#git操作&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;总结了一些基本的操作，使用上面我感觉最大的不同就是git操作是针对每次commit，而svn不同，svn可以切换到任意目录下，只更新小部分的文件，merge也可以只针对某个特定的文件夹merge，而不是对commit做merge&lt;/p&gt;</content><author><name>true</name></author><category term="版本管理工具" /><category term="SVN" /><category term="Git" /><summary type="html">之前在公司版本管理工具一直用的是Git，习惯于Git命令行操作，最近换了家公司，发现竟然用的是SVN。在Windows系统上，可以用小乌龟这个工具。我一直习惯用Mac办公，Mac上也有图形界面工具，例如SmartSVN，但是是收费软件。Mac有个好处就是自带了SVN客户端，可以在命令行中直接使用。</summary></entry><entry><title type="html">MySQL行列转换</title><link href="http://localhost:4000/2019/03/20/sql_row_column_conversion.html" rel="alternate" type="text/html" title="MySQL行列转换" /><published>2019-03-20T16:33:12+08:00</published><updated>2019-03-20T16:33:12+08:00</updated><id>http://localhost:4000/2019/03/20/sql_row_column_conversion</id><content type="html" xml:base="http://localhost:4000/2019/03/20/sql_row_column_conversion.html">&lt;p&gt;先创建表&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;CREATE&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;TABLE&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`grade`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`course`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;text&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
  &lt;span class=&quot;nv&quot;&gt;`score`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NOT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;NULL&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InnoDB&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARSET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;插入数据&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`grade`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`course`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`score`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'张三'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'语文'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;76&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`grade`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`course`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`score`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'李四'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'语文'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;76&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`grade`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`course`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`score`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'李四'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'数学'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;90&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;INSERT&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;INTO&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`grade`&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`course`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;`score`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;VALUES&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'张三'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'数学'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;75&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;列转行&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;course&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;数学&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;数学&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;course&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;语文&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;语文&quot;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;grade&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_sql_row_column_conversion/column_to_row.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;创建另一张表及插入数据&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/*建表*/&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;create&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;table&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_grade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;
	&lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;varchar&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;`math`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;nv&quot;&gt;`chinese`&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;int&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;ENGINE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InnoDB&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;DEFAULT&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;CHARSET&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;utf8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;cm&quot;&gt;/*将列转行的结果作为新的结果插入表中*/&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;insert&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_grade&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
	&lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;course&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;数学&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;数学&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;max&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;case&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;when&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;course&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;语文&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;then&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;score&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;&quot;语文&quot;&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;grade&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;group&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;by&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;行转列&lt;/p&gt;

&lt;div class=&quot;language-sql highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cm&quot;&gt;/* database名字为test */&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'语文'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`subject`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;chinese&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_grade&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;union&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;all&lt;/span&gt; 
&lt;span class=&quot;k&quot;&gt;select&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`name`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;'数学'&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;`subject`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;math&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;test&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_grade&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_sql_row_column_conversion/row_to_column.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;</content><author><name>true</name></author><category term="SQL" /><category term="MySQL" /><summary type="html">先创建表</summary></entry><entry><title type="html">AWS搭建VPN</title><link href="http://localhost:4000/2019/02/16/AWS_VPN.html" rel="alternate" type="text/html" title="AWS搭建VPN" /><published>2019-02-16T23:37:24+08:00</published><updated>2019-02-16T23:37:24+08:00</updated><id>http://localhost:4000/2019/02/16/AWS_VPN</id><content type="html" xml:base="http://localhost:4000/2019/02/16/AWS_VPN.html">&lt;p&gt;之前一直用的是搬瓦工的VPS，现在搬瓦工只支持KVM模式，所以价格上去了，我的搬瓦工也到期了，听说AWS首年免费使用，所以尝试一下，注册了一个账号，英文不好的童鞋可以把语言切换成中文。&lt;/p&gt;

&lt;p&gt;首先要注册一个账号，注册的时候要求填电话号码，不要乱填，因为需要验证手机号码的，还需要绑定一张信用卡，信用要支持Visa的，要全币种的信用卡。AWS会进行信用卡验证，扣1$验证信用卡是否有效，说是会退的，后面我还被扣了1$的押金，招行微信公众号发消息告诉我消费了，后来我又打电话给招行客服，客服说我信用卡账单没查到这两笔交易，以账单为准，哈哈&lt;/p&gt;

&lt;p&gt;先选择机器所在地区，我选择的是东京，截图右上角
&lt;img src=&quot;/blog/blog_aws_vpn/area.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;创建EC2实例,点击图中的launch instance创建实例
&lt;img src=&quot;/blog/blog_aws_vpn/launch.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;选择带Free tier eligible的机器，这里选的是Ubuntu Server 18.04 LTS这款
&lt;img src=&quot;/blog/blog_aws_vpn/free_machine.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;进来之后还是选择带Free tier eligible的机器，配置不高，但是搭建VPN还是可以的
&lt;img src=&quot;/blog/blog_aws_vpn/review_launch.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;在之后的页面中点击Launch按钮，会弹出这个框，需要设置密钥对，设置完后下载密钥对，之后再Launch Instances，密钥对在后面会用于登陆服务器，
&lt;img src=&quot;/blog/blog_aws_vpn/key_pair.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;先启动实例后再连接实例
&lt;img src=&quot;/blog/blog_aws_vpn/connect.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;会弹出连接方式，教你怎么连接上你创建的实例，先给下载的密钥对文件授权，然后用ssh方式登录服务器
&lt;img src=&quot;/blog/blog_aws_vpn/ssh_connect.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此，实例创建完成&lt;/p&gt;

&lt;p&gt;登录服务器，用Shadowsocks搭建VPN&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; //获取root权限
apt-get update //更新apt-get
apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;python-pip //安装pip工具，用于安装shadowsocks
pip &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;shadowsocks //安装shadowsocks
vim ~/shadowsocks_conf.json //编辑shadowsocks配置

&lt;span class=&quot;c&quot;&gt;#json文件内容为如下&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;server&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;0.0.0.0&quot;&lt;/span&gt;, 
    &lt;span class=&quot;s2&quot;&gt;&quot;server_port&quot;&lt;/span&gt;: 443, &lt;span class=&quot;c&quot;&gt;#vpn端口号&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;qwertyuiop&quot;&lt;/span&gt;, &lt;span class=&quot;c&quot;&gt;#连接密码&lt;/span&gt;
    &lt;span class=&quot;s2&quot;&gt;&quot;local_address&quot;&lt;/span&gt;: &lt;span class=&quot;s2&quot;&gt;&quot;127.0.0.1&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;local_port&quot;&lt;/span&gt;:1080,
    &lt;span class=&quot;s2&quot;&gt;&quot;timeout&quot;&lt;/span&gt;:600,
    &lt;span class=&quot;s2&quot;&gt;&quot;method&quot;&lt;/span&gt;:&lt;span class=&quot;s2&quot;&gt;&quot;aes-256-cfb&quot;&lt;/span&gt;,
    &lt;span class=&quot;s2&quot;&gt;&quot;fast_open&quot;&lt;/span&gt;: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;


ssserver &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; ~/shadowsocks_conf.json &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; start //启动shadowsocks

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;编辑EC2入站规则，还是再控制台页面，下面是有滚动条的，滑到最右边就能看见了
&lt;img src=&quot;/blog/blog_aws_vpn/security_groups.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_aws_vpn/edit.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;自定义入站规则，把刚刚在json配置文件中的端口给加上去，我用的是443，再加个22端口，ssh默认使用的是22端口，如果修改过，则换为修改后的端口
&lt;img src=&quot;/blog/blog_aws_vpn/custom_rule.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;至此搭建工作完成&lt;/p&gt;

&lt;p&gt;本人的是Mac版的，分享一个&lt;a href=&quot;链接:https://pan.baidu.com/s/1Ut0M8bMxCPnr1xoOHOxZig&quot;&gt;百度云链接&lt;/a&gt;，密码:2v7x，两个版本的客户端，任意下载一个即可，使用&lt;a href=&quot;https://github.com/shadowsocks/ShadowsocksX-NG/releases&quot;&gt;GitHub下载地址&lt;/a&gt;下载也可以&lt;/p&gt;

&lt;p&gt;安装完后，在 服务器-&amp;gt;服务器设定，填写配置信息，配置信息在刚刚的json文件中配置了，地址不要使用ifconfig显示的IP，在控制台页面中查看公网IP，还是在下方把滚动条向右滑
&lt;img src=&quot;/blog/blog_aws_vpn/ss_connect.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_aws_vpn/public_ip.webp&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;大功告成，不要干坏事噢&lt;/p&gt;

&lt;p&gt;为了方便以后登录服务器，建议把ssh public key添加到服务器上&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c&quot;&gt;# 本地操作&lt;/span&gt;
ssh-keygen &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; rsa &lt;span class=&quot;c&quot;&gt;#生成ssh key，使用rsa加密方式，输入密码时可以回车，不设置密码&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.ssh
&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;id_rsa.pub &lt;span class=&quot;c&quot;&gt;#该文件中的内容就是ssh public key，把该文件中的内容拷贝&lt;/span&gt;

&lt;span class=&quot;c&quot;&gt;#服务器端操作&lt;/span&gt;
&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~/.ssh
&lt;span class=&quot;nb&quot;&gt;touch &lt;/span&gt;authorized_keys &lt;span class=&quot;c&quot;&gt;#如果没有authorized_keys文件&lt;/span&gt;
&lt;span class=&quot;c&quot;&gt;#再把刚copy的public key添加到authorized_keys文件中，之后就可以使用ssh user@ip 的方式连接上服务器&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>true</name></author><category term="VPS" /><category term="Linux" /><category term="VPN" /><summary type="html">之前一直用的是搬瓦工的VPS，现在搬瓦工只支持KVM模式，所以价格上去了，我的搬瓦工也到期了，听说AWS首年免费使用，所以尝试一下，注册了一个账号，英文不好的童鞋可以把语言切换成中文。</summary></entry><entry><title type="html">引入sbt错误</title><link href="http://localhost:4000/2019/02/02/sbt_error-conclusion.html" rel="alternate" type="text/html" title="引入sbt错误" /><published>2019-02-02T22:59:37+08:00</published><updated>2019-02-02T22:59:37+08:00</updated><id>http://localhost:4000/2019/02/02/sbt_error-conclusion</id><content type="html" xml:base="http://localhost:4000/2019/02/02/sbt_error-conclusion.html">&lt;p&gt;今天使用IntelliJ IDEA创建项目，碰到个古怪的错误，创建完报错，无法引入sbt，错误信息如下
&lt;img src=&quot;/blog/blog_sbt_import_error_conclusion/import_error.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;根据错误信息，大胆猜测本地可能没有sbt1.2.8，于是进入sbt本地仓库中查看
&lt;img src=&quot;/blog/blog_sbt_import_error_conclusion/sbt_local_version.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;果然，本地仓库中sbt版本没有1.2.8，于是切换项目的sbt版本，切换sbt版本需要修改build.properties中sbt的版本号，切换操作如下图显示
&lt;img src=&quot;/blog/blog_sbt_import_error_conclusion/sbt_version.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;PS：明天回家，准备过年。&lt;br /&gt;
         从去年十一月份出来实习到现在，已经工作一年多了，学到了很多，技术上得到了很大的成长，虽然有时很累，但是更多的还是开心，语言也从python到scala，再到python，仍然记得当初秋招和实习找工作时我想做的是Java开发。工作中慢慢的接触到大数据领域，再慢慢接触到算法领域，也学了一段时间的算法，常见分类、聚类算法，scikit-learn等，个人更感兴趣的还是大数据领域。&lt;br /&gt;
         今年，告别校园生涯，走上社会，遗憾的是说好的毕业旅行泡汤了。&lt;br /&gt;
         毕业后没多久，公司也发生了很多变动，leader的离职对我的打击还是挺大的吧，从没想过他会离职，真的非常优秀的leader，还会给我们指导学习方向，教会了我很多东西。还记得之前他出差，还和我语音通话一起调bug到凌晨，真的非常感谢。在leader离职后的日子里，虽然技术上没什么大的成长，但是在社会阅历上也有很多成长，因为缺少了前leader这棵大树，可以看到公司的很多实际情况，或许，也是在这个时候才真正的了解公司了。才开始知道其实很多事情并没有表面看上去那么光鲜亮丽吧！也见识了各种各样的甩锅技术，可悲的是很多人怕背锅连最基本的担当都丢失了，出了事情把所有的责任往外推的一干二净。有过希望，也有过失落。这一年就这么过去了，真的好快，感觉自己还有很多东西没学，还有很多东西不懂。来年，一定变得更优秀！&lt;br /&gt;
         这一年里，最最最重要的是收获了真挚的友谊（小肥汪&amp;amp;刺猬妈），这是最开心的事情了。偶尔一起聚个餐，周末一起出去玩，让孤孤单单的我也感受到了温暖。谢谢你们！愿友谊地久天长！ &lt;br /&gt;
         2018，再见！&lt;br /&gt;
         2019，加油！&lt;/p&gt;</content><author><name>true</name></author><category term="Sbt" /><summary type="html">今天使用IntelliJ IDEA创建项目，碰到个古怪的错误，创建完报错，无法引入sbt，错误信息如下</summary></entry><entry><title type="html">jvisualvm监控远程服务器</title><link href="http://localhost:4000/2019/01/09/jvisualvm_jxm.html" rel="alternate" type="text/html" title="jvisualvm监控远程服务器" /><published>2019-01-09T03:24:56+08:00</published><updated>2019-01-09T03:24:56+08:00</updated><id>http://localhost:4000/2019/01/09/jvisualvm_jxm</id><content type="html" xml:base="http://localhost:4000/2019/01/09/jvisualvm_jxm.html">&lt;p&gt;添加JVM参数，在这里未使用身份验证，生产环境建议开启用户名密码验证，端口号为18999，可自行更改，同jstatd方式一样，远程访问需要开放指定的端口&lt;/p&gt;

&lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;-Djava&lt;/span&gt;.rmi.server.hostname&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;ip&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;域名&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Dcom&lt;/span&gt;.sun.management.jmxremote.port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;18999 &lt;span class=&quot;nt&quot;&gt;-Dcom&lt;/span&gt;.sun.management.jmxremote.ssl&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Dcom&lt;/span&gt;.sun.management.jmxremote.authenticate&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_jvm/success.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;注意：Scala程序做成systemd服务启动，添加JVM参数需要在参数前加-J，如下&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/blog/blog_jvm/scala_style.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;</content><author><name>true</name></author><category term="JVM" /><category term="Scala" /><summary type="html">添加JVM参数，在这里未使用身份验证，生产环境建议开启用户名密码验证，端口号为18999，可自行更改，同jstatd方式一样，远程访问需要开放指定的端口</summary></entry><entry><title type="html">jvisualvm监控远程服务器</title><link href="http://localhost:4000/2019/01/04/jvisualvm.html" rel="alternate" type="text/html" title="jvisualvm监控远程服务器" /><published>2019-01-04T05:05:21+08:00</published><updated>2019-01-04T05:05:21+08:00</updated><id>http://localhost:4000/2019/01/04/jvisualvm</id><content type="html" xml:base="http://localhost:4000/2019/01/04/jvisualvm.html">&lt;p&gt;步骤&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;ssh登录服务器&lt;/p&gt;

    &lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ssh root@xxx.xxx.xxx.xxx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;在家目录下创建授权文件&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; ~
vi jstatd.all.policy
&lt;span class=&quot;c&quot;&gt;#在文件中输入如下内容&lt;/span&gt;
grant codebase &lt;span class=&quot;s2&quot;&gt;&quot;file:&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;java&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.home&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;/../lib/tools.jar&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;
 permission java.security.AllPermission&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;启动jstatd服务，默认连接端口号为1099&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/bin/jstatd &lt;span class=&quot;nt&quot;&gt;-J-Djava&lt;/span&gt;.security.policy&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jstatd.all.policy
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;本地连接不上远程解决方案&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;服务器上开启了防火墙，需要开放1099端口，或者关闭防火墙，需要注意的是，仅仅开放1099端口可能还是连接不上，因为jstatd服务有两个端口，另一个端口也需要开放
&lt;img src=&quot;/blog/blog_jvm/jstatd_port.jpg&quot; alt=&quot;image&quot; /&gt;
如图所示，还有另一个端口37529，经测试，该端口是随机的，每次开启jstatd服务，该端口都会变化，检查端口是否开放，在本地执行如下命令&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;telnet ip port &lt;span class=&quot;c&quot;&gt;#如果端口未开放，则连接会被拒绝或者卡在尝试连接中&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;如果端口均可以访问，执行如下命令启动服务&lt;/p&gt;

    &lt;div class=&quot;language-shell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;${&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;JAVA_HOME&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;}&lt;/span&gt;/bin/jstatd &lt;span class=&quot;nt&quot;&gt;-J-Djava&lt;/span&gt;.security.policy&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;jstatd.all.policy &lt;span class=&quot;nt&quot;&gt;-J-Djava&lt;/span&gt;.rmi.server.hostname&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;域名&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;IP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
&lt;/ol&gt;</content><author><name>true</name></author><category term="JVM" /><summary type="html">步骤</summary></entry><entry><title type="html">Elasticsearch自定义分词器</title><link href="http://localhost:4000/2018/12/23/Elasticsearch%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E8%AF%8D%E5%99%A8.html" rel="alternate" type="text/html" title="Elasticsearch自定义分词器" /><published>2018-12-23T13:11:01+08:00</published><updated>2018-12-23T13:11:01+08:00</updated><id>http://localhost:4000/2018/12/23/Elasticsearch%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E8%AF%8D%E5%99%A8</id><content type="html" xml:base="http://localhost:4000/2018/12/23/Elasticsearch%E8%87%AA%E5%AE%9A%E4%B9%89%E5%88%86%E8%AF%8D%E5%99%A8.html">&lt;p&gt;Elasticsearch默认的分词器会将中文比如”你好”拆分成”你”和”好”这两个字，然后按照倒排索引进行存储，所以默认的分词不好用，大部分时候都会自己更换分词器以达到预期的效果。推荐一个很好用的分词器，众所周知的IK分词器&lt;/p&gt;

&lt;p&gt;简单介绍一下IK分词器中的ik_smart和ik_max_word，两者的区别就是分词粒度不一样&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ik_smart:粗粒度分词
ik_max_word:细粒度分词，切分出的词尽可能的多
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;ik_smart粗粒度分词效果
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/ik_smart.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;ik_max_word细粒度分词效果，可以看到切分出的词非常多，ik_smart切分的词只是ik_max_word分词后的子集
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/ik_max_word.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;安装IK分词器，本人使用的Elasticsearch版本是5.5.3，安装IK需要把下面命令中的5.5.3更换成自己Elasticsearch的版本号，安装完后重启Elasticsearch&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-ik/releases/download/v5.5.3/elasticsearch-analysis-ik-5.5.3.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;IK分词器详细说明&lt;a href=&quot;https://github.com/medcl/elasticsearch-analysis-ik&quot;&gt;参见github文档&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;既然中文可以搜索，那么拼音也可以进行搜索，用户时常在输入中文的时候输成了拼音，为了提高UE，也应当返回搜索结果，就像百度搜索一样
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/baidu.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;再介绍一下拼音分词插件，本人使用的是elasticsearch-analysis-pin插件，同IK分词插件一样，也是elastic大咖&lt;a href=&quot;https://github.com/medcl&quot;&gt;medcl&lt;/a&gt;的项目，详细使用详情参见&lt;a href=&quot;https://github.com/medcl/elasticsearch-analysis-pinyin&quot;&gt;github&lt;/a&gt;，大咖常年活跃在&lt;a href=&quot;https://elasticsearch.cn/&quot;&gt;elastic中文社区&lt;/a&gt;，很多问题在中文社区都能够得到有效的解决&lt;/p&gt;

&lt;p&gt;安装方式，同样也要更换成Elasticsearch相对应的版本号&lt;/p&gt;
&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./bin/elasticsearch-plugin install https://github.com/medcl/elasticsearch-analysis-pinyin/releases/download/v5.5.3/elasticsearch-analysis-pinyin-5.5.3.zip
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;pinyin索引效果
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/pinyin.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;pinyin分词器存在一个问题就是多音字不好区分，NLP语义理解一直也是比较难的部分，例如下面就没有将“银行”的拼音正确解析
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/pinyin_ polyphone.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;忘记介绍了，本人使用的搜索界面是kibana，是ELK组件中的K，E是Elaisticsearch，L是Logstash，L用于日志收集，界面插件有很多，Kibana还是很好用的，强烈安利一波，Elasticsearch+Kibana环境搭建还是很简单的，在此不做过多赘述&lt;/p&gt;

&lt;p&gt;进入正题，我们想要实现上图中百度搜索这种效果就需要把pinyin和ik进行组合搜索。先自定义分词器&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PUT demo
{
  &quot;index&quot;: {
      &quot;analysis&quot;: {
          &quot;filter&quot;: {
              &quot;index_pinyin&quot;: {
                    &quot;type&quot;: &quot;pinyin&quot;,
                    &quot;keep_original&quot;: true,
                    &quot;keep_first_letter&quot;: true,
                    &quot;keep_separate_first_letter&quot;: true,
                    &quot;keep_full_pinyin&quot;: true,
                    &quot;keep_joined_full_pinyin&quot;: true,
                    &quot;keep_none_chinese_in_joined_full_pinyin&quot;: false,
                    &quot;keep_none_chinese_in_first_letter&quot;: false,
                    &quot;none_chinese_pinyin_tokenize&quot;: false,
                    &quot;first_letter&quot;: &quot;prefix&quot;,
                    &quot;padding_char&quot;: &quot; &quot;,
                    &quot;lowercase&quot; : true,
                    &quot;remove_duplicated_term&quot; : true
                },
                &quot;search_pinyin&quot;: {
                    &quot;type&quot;: &quot;pinyin&quot;,
                    &quot;keep_original&quot;: true,
                    &quot;keep_first_letter&quot;: false,
                    &quot;keep_separate_first_letter&quot;: false,
                    &quot;keep_full_pinyin&quot;: false,
                    &quot;keep_joined_full_pinyin&quot;: true,
                    &quot;keep_none_chinese_in_joined_full_pinyin&quot;: true,
                    &quot;keep_none_chinese_in_first_letter&quot;: true,
                    &quot;none_chinese_pinyin_tokenize&quot;: false,
                    &quot;first_letter&quot;: &quot;prefix&quot;,
                    &quot;padding_char&quot;: &quot; &quot;,
                    &quot;lowercase&quot; : true,
                    &quot;remove_duplicated_term&quot; : true
                },
                &quot;length&quot;:{
                  &quot;type&quot;: &quot;length&quot;,
                  &quot;min&quot;:2
                }
                
            },
            &quot;analyzer&quot;: {
                &quot;index_ik_pinyin_analyzer&quot;: {
                    &quot;type&quot;: &quot;custom&quot;,
                    &quot;tokenizer&quot;: &quot;ik_max_word&quot;,
                    &quot;filter&quot;: [&quot;index_pinyin&quot;]
                },
                &quot;search_ik_pinyin_analyzer&quot;: {
                    &quot;type&quot;: &quot;custom&quot;,
                    &quot;tokenizer&quot;: &quot;ik_smart&quot;,
                    &quot;filter&quot;: [&quot;length&quot;,&quot;search_pinyin&quot;,&quot;length&quot;]
                }
            }
            
        }
    }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;定义了两个分词器，analyzer中的index_ik_pinyin_analyzer和search_ik_pinyin_analyzer，在filter中定义了3个过滤器，两个是pinyin类型过滤器，还有一个是length过滤器，将分词后的长度最小值设置成2，也就是去掉长度为1的词&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PUT demo/items/_mapping
{
  &quot;properties&quot;: {
    &quot;name&quot;:{
      &quot;type&quot;: &quot;text&quot;,
      &quot;analyzer&quot;: &quot;index_ik_pinyin_analyzer&quot;,
      &quot;search_analyzer&quot;: &quot;search_ik_pinyin_analyzer&quot;,
      &quot;fields&quot;: {
        &quot;keyword&quot;:{
          &quot;type&quot;: &quot;keyword&quot;,
          &quot;ignore_above&quot;: 256
        }
      }
    }
  }
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;设置mapping，type为items，只设置了一个字段name，index_ik_pinyin_analyzer用于索引，search_ik_pinyin_analyzer用于搜索，在ES中，索引做为名词就是索引的意思，做为动词可以理解成存储的意思&lt;/p&gt;

&lt;p&gt;通过bulk API批量操作数据&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;POST _bulk
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 1}}
{&quot;name&quot;: &quot;美国&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 2}}
{&quot;name&quot;: &quot;英国&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 3}}
{&quot;name&quot;: &quot;中国&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 4}}
{&quot;name&quot;: &quot;中华人民共和国&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 5}}
{&quot;name&quot;: &quot;gongheguo&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 6}}
{&quot;name&quot;: &quot;刘德华&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 7}}
{&quot;name&quot;: &quot;刘青云&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 8}}
{&quot;name&quot;: &quot;陕西省&quot;}
{&quot;index&quot;:{&quot;_index&quot;:&quot;demo&quot;,&quot;_type&quot;: &quot;items&quot;,&quot;_id&quot;: 9}}
{&quot;name&quot;: &quot;山西省&quot;}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用match搜索“中华人民共和国”的全拼音结果如下图
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/search_pinyin.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用match搜索“中华人民共和国”的拼音首字母结果如下图
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/search_first_pinyin.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;使用match搜索“中华”结果如下图
&lt;img src=&quot;/blog/blog_elasticsearch_ik_pinyin/search_term.jpg&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;如果对IK分词器的效果不是很满意，可以自己整理语料，放入词库中，自定义词库路径为&quot;config/analysis-ik/custom&quot;，同时需要修改IKAnalyzer.cfg.xml文件，在该文件中配置自定义词库的读取&lt;/p&gt;

&lt;p&gt;推荐一个分词工具，个人认为挺好用的，是由梁斌老师提供的&lt;a href=&quot;http://www.pullword.com/&quot;&gt;基于深度学习的中文在线抽词PullWord&lt;/a&gt;&lt;/p&gt;</content><author><name>true</name></author><category term="elasticsearch" /><category term="搜索引擎" /><summary type="html">Elasticsearch默认的分词器会将中文比如”你好”拆分成”你”和”好”这两个字，然后按照倒排索引进行存储，所以默认的分词不好用，大部分时候都会自己更换分词器以达到预期的效果。推荐一个很好用的分词器，众所周知的IK分词器</summary></entry><entry><title type="html">sbt打包程序</title><link href="http://localhost:4000/2018/12/19/sbt%E6%89%93%E5%8C%85%E7%A8%8B%E5%BA%8F.html" rel="alternate" type="text/html" title="sbt打包程序" /><published>2018-12-19T00:00:00+08:00</published><updated>2018-12-19T00:00:00+08:00</updated><id>http://localhost:4000/2018/12/19/sbt%E6%89%93%E5%8C%85%E7%A8%8B%E5%BA%8F</id><content type="html" xml:base="http://localhost:4000/2018/12/19/sbt%E6%89%93%E5%8C%85%E7%A8%8B%E5%BA%8F.html">&lt;p&gt;Assembly Jar（组合Jar）与普通Jar的区别就是Assembly Jar会将所有的依赖都打进Jar中，最后生成的包比较大&lt;/p&gt;

&lt;p&gt;打包spark程序步骤如下，sbt版本0.13.17：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 在project下创建plugins.sbt,并添加内容
    addSbtPlugin(&quot;com.eed3si9n&quot; % &quot;sbt-assembly&quot; % &quot;0.14.6&quot;)
    
2. 修改build.sbt文件，添加以下内容
    assemblyJarName in assembly := &quot;first-spark-assembly.jar&quot; # 配置jar的名字
    assemblyOption in assembly := (assemblyOption in assembly).value.copy(includeScala = false) # 把scala本身排除在组合jar之外，因为spark已经包含了scala

3. 运行 sbt clean assembly
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;依赖项，%%表示测试时需要，一般为%； % “provided”表示此依赖不打入最终的jar文件内，提交到spark集群中所有spark相关的jar不需要打入到Assembly Jar中&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;libraryDependencies+=&quot;org.apache.spark&quot;%%&quot;spark-core&quot;%&quot;2.2.0&quot;%&quot;provided&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;使用阿里云的仓库&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;resolvers+=&quot;aliyun Maven Repository&quot;at&quot;http://maven.aliyun.com/nexus/content/groups/public&quot;
externalResolvers:= Resolver.withDefaultResolvers(resolvers.value,mavenCentral=false)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;指定java版本&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;javacOptions++=Seq(&quot;-source&quot;,&quot;1.8&quot;,&quot;-target&quot;,&quot;1.8&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;指定主函数&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mainClass in Compile:=Some(&quot;org.apache.spark.WordCount&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;如果有些jar包maven仓库没有，而工程中确实要用到，你可以在项目根录下建立lib文件夹，将额外的jar放进去即可。&lt;br /&gt;
或者可以自定义lib文件夹的名称，例如：&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;unmanagedBase := &quot;mylib&quot;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;然后将用到的jar包放到工程根目录的mylib文件夹下，sbt会自动将lib下的jar包中的类加到最终的Assembly Jar中。&lt;/p&gt;

&lt;p&gt;sbt打包错误&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Unable to find credentials for [Sonatype Nexus Repository Manager @ nx.company.cn]

解决方案：build.sbt文件中添加
credentials += Credentials(&quot;Sonatype Nexus Repository Manager&quot;, &quot;nx.company.cn&quot;, &quot;user&quot;, &quot;password&quot;)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;sbt-native-packager&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1. 在project下创建plugins.sbt,并添加内容
addSbtPlugin(&quot;com.typesafe.sbt&quot; % &quot;sbt-native-packager&quot; % &quot;1.3.15&quot;)

2. 在build.sbt中开启插件支持,JavaAppPackaging只是一种,下面是举例
enablePlugins(JavaAppPackaging)

3. sbt &amp;lt;config-scope&amp;gt;:&amp;lt;config-type&amp;gt;

	例：sbt universal:packageBin

	universal:packageBin - Generates a universal zip file
	universal:packageZipTarball - Generates a universal tgz file
	debian:packageBin - Generates a deb
	docker:publishLocal - Builds a Docker image using the local Docker server
	rpm:packageBin - Generates an rpm
	universal:packageOsxDmg - Generates a DMG file with the same contents as the universal zip/tgz.
	windows:packageBin - Generates an MSI
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;sbt-native-packager使用参见&lt;a href=&quot;https://www.scala-sbt.org/sbt-native-packager/index.html&quot;&gt;官方文档&lt;/a&gt;&lt;/p&gt;</content><author><name>true</name></author><category term="Scala" /><category term="Sbt" /><category term="打包" /><category term="Spark" /><summary type="html">Assembly Jar（组合Jar）与普通Jar的区别就是Assembly Jar会将所有的依赖都打进Jar中，最后生成的包比较大</summary></entry><entry><title type="html">Linux常用命令</title><link href="http://localhost:4000/2018/12/16/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html" rel="alternate" type="text/html" title="Linux常用命令" /><published>2018-12-16T00:00:00+08:00</published><updated>2018-12-16T00:00:00+08:00</updated><id>http://localhost:4000/2018/12/16/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4</id><content type="html" xml:base="http://localhost:4000/2018/12/16/Linux%E5%B8%B8%E7%94%A8%E5%91%BD%E4%BB%A4.html">&lt;p&gt;查看当前所在的工作目录的全路径&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;pwd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看当前系统的时间&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;date
date +%Y-%m-%d   # 按后面的格式显示当前时间，2018-12-16
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看当前有谁在线（在当前的服务器上）&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;who 或者 w
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看最近的登陆历史记录&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;last
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;关机/重启&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;关机（必须用root用户）
shutdown -h now  # 立刻关机
shutdown -h +10  #  10分钟以后关机
shutdown -h 12:00:00  #12点整的时候关机

重启
shutdown -r now
reboot   # 等于立刻重启
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;清屏&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;clear 或者 ctrl + l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;挂起当前进程&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ctrl+z   # 进程会挂起到后台
bg jobid  # 让进程在后台继续执行
fg jobid   # 让进程回到前台
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;切换工作目录&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cd ~     # 切换到用户主目录（家目录）
cd -     #  回退到上次所在的目录
cd  什么路径都不带，则回到用户的主目录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建文件夹&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mkdir hello #创建文件夹
mkdir -p  aaa/bbb/ccc   # 级联创建文件夹
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;删除文件夹&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;rmdir  aaa   # 可以删除空文件夹
rm  -r  aaa   # 可以把aaa整个文件夹及其中的所有子文件及文件夹全部删除
rm  -rf  aaa   # 强制删除aaa及其子文件夹、文件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改文件夹名称&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mv aaa boy   #mv本质上是移动
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建文件&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;touch somefile.1   # 创建一个空文件somefile.1
echo &quot;hi,boy&quot; &amp;gt; somefile.2    ## 利用重定向“&amp;gt;”的功能，将一条指令的输出结果写入到一个文件中，会覆盖原文件内容，如果指定的文件不存在，则会创建出来
vi somefile.3   #编辑文件，编辑完后保存，如果不存在则会创建新的文件
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;拷贝&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cp somefile.1 /home/hadoop/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看文件内容&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;cat somefile      #一次性将文件内容全部输出（控制台）
cat file -n   #显示文件内容及行号
more somefile     # 可以翻页查看, 下翻一页(空格)    上翻一页（b）   退出（q）
less somefile      #可以翻页查看,下翻一页(空格)    上翻一页（b），上翻一行(↑)  下翻一行（↓）  可以搜索关键字（/keyword）
tail -10 install.log  查看文件尾部的10行
head -10 install.log   查看文件头部的10行
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;压缩与解压&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、gzip压缩，压缩后a.txt会不存在，生成压缩文件a.txt.gz
    gzip a.txt
2、解压
    gunzip a.txt.gz
    gzip -d a.txt.gz
    
3、bzip2压缩，压缩后a.txt不存在，会生成压缩文件a.txt.bz2
    bzip2 a.txt
4、解压
    bunzip2 a.bz2
    bzip2 -d a.bz2
    
5、打包并压缩
    tar -zcvf a.tar.gz  aaa/   #会打包aaa文件夹并压缩
8、解包并解压缩
    tar  -zxvf  a.tar.gz
    解压到/usr下
    tar  -zxvf  a.tar.gz  -C  /usr
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;常用查找命令的使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;1、查找可执行的命令所在的路径：
which     # which ls 查看ls命令所在的路径

2、查找可执行的命令的位置：
whereis  # whereis ls 查看ls命令所在的路径

3、从某个文件夹开始查找文件
find / -name &quot;hadoop*&quot; #在根目录下查找文件名以hadoop为前缀的文件
find / -name &quot;hadoop*&quot; -ls

4、查找并删除
find / -name &quot;hadoop*&quot; -ok rm {} \;
find / -name &quot;hadoop*&quot; -exec rm {} \;

5、查找用户为hadoop的文件
find  /usr  -user  hadoop  -ls

6、查找用户为hadoop的文件夹
find /home -user hadoop -type d -ls  # -type指定文件类型，d代表目录

7、查找权限为777的文件夹
find / -perm -777 -type d -ls

8、查看当前目录下文件个数
find ./ | wc -l

9、显示命令历史
history
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;文件权限的操作&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;drwxr-xr-x      （也可以用二进制表示  111 101 101  --&amp;gt;  755）

d：标识节点类型（d：文件夹   -：文件  l:链接）
r：可读   w：可写    x：可执行 
第一组rwx：  # 表示这个文件的拥有者对它的权限：可读可写可执行
第二组r-x：  # 表示这个文件的所属组用户对它的权限：可读，不可写，可执行
第三组r-x：  # 表示这个文件的其他用户（相对于上面两类用户）对它的权限：可读，不可写，可执行

chmod g-rw haha.dat		 # 表示将haha.dat对所属组的rw权限取消
chmod o-rw haha.dat		 # 表示将haha.dat对其他人的rw权限取消
chmod u+x haha.dat		 # 表示将haha.dat对所属用户的权限增加x
chmod a-x haha.dat       # 表示将haha.dat对所用户取消x权限


也可以用数字的方式来修改权限
chmod 664 haha.dat   

如果要将一个文件夹的所有内容权限统一修改，则可以-R参数
chmod -R 770 aaa/
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改文件所有权&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&amp;lt;只有root权限能执行&amp;gt;
chown angela  aaa		## 改变所属用户
chown :angela  aaa		## 改变所属组
chown angela:angela aaa/	## 同时修改所属用户和所属组
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;基本用户管理&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;添加一个用户：
useradd spark
passwd  spark     #根据提示设置密码即可

删除一个用户：
userdel -r spark     #加一个-r就表示把用户及用户的主目录都删除
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;为用户配置sudo权限&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;用root编辑 vi /etc/sudoers
在文件的如下位置，为hadoop添加一行即可
root    ALL=(ALL)       ALL     
hadoop  ALL=(ALL)       ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;统计文件或文件夹的大小&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;du -sh  /mnt/cdrom/packages  #查看文件夹大小
df -h    #查看磁盘的空间
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看内存大小&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;free -h
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;修改IP&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;(重启后永久生效)centos
vi /etc/sysconfig/network-scripts/ifcfg-eth0

(重启后无效)
ifconfig eth0 192.168.12.22
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;关闭防火墙&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;centos7
    systemctl stop firewalld   #关闭防火墙
    systemctl disable firewalld #设置开机禁止自启动
    
ubuntu 
    ufw stop #关闭防火墙
    ufw disable #设置开机禁止自启动
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;上传下载&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;scp a.txt root@192.168.0.10:~          #上传a.txt到root用户的主目录下

scp root@192.168.0.10:~/a.txt .        #下载a.txt到当前目录
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看cpu核数&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lscpu
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看程序的binary文件所在路径&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;示例：which python
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看程序的搜索路径&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;示例：whereis python
当系统中安装了同一软件的多个版本时，不确定使用的是哪个版本时，这个命令就能派上用场
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;按时间排序，以列表的方式显示目录项&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ls -lrt
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;创建符号链接/硬链接&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ln cc ccAgain :硬连接；删除一个，将仍能找到；
ln -s cc ccTo :符号链接(软链接)；删除源，另一个无法使用；（后面一个ccTo 为新建的文件）
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;列出所有端口 (包括监听和未监听的)&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat -a
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;列出所有有监听的服务状态&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat -l

显示进程ID
netstat -p

如果显示不出来，则可以使用lsof -i:port
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;列出所有 tcp 端口&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;netstat -at
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看cpu信息&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lscpu 或者 cat /proc/cpuinfo

查看核数
    lscpu中CPUS信息  
    或者
    cat /proc/cpuinfo | grep processor | wc -l
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看cpu状态&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;top
按CPU使用率排序 P
按内存RES使用率排序 M
显示程序全路径 c
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;查看特定端口被哪个进程使用&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lsof -i:port
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;</content><author><name>true</name></author><category term="Linux" /><summary type="html">查看当前所在的工作目录的全路径 pwd 查看当前系统的时间</summary></entry></feed>